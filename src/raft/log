disconnect(0)
server = 0, nextIndex[0] = 1
server = 1, nextIndex[1] = 1
server = 2, nextIndex[2] = 1
server = 3, nextIndex[3] = 1
server = 4, nextIndex[4] = 1
me = 0
server handler
create goroutine, program continue
disconnect(1)
server = 0, nextIndex[0] = 1
server = 1, nextIndex[1] = 1
server = 2, nextIndex[2] = 1
server = 3, nextIndex[3] = 1
server = 4, nextIndex[4] = 1
me = 1
server handler
create goroutine, program continue
disconnect(2)
server = 0, nextIndex[0] = 1
server = 1, nextIndex[1] = 1
server = 2, nextIndex[2] = 1
server = 3, nextIndex[3] = 1
server = 4, nextIndex[4] = 1
me = 2
server handler
create goroutine, program continue
disconnect(3)
server = 0, nextIndex[0] = 1
server = 1, nextIndex[1] = 1
server = 2, nextIndex[2] = 1
server = 3, nextIndex[3] = 1
server = 4, nextIndex[4] = 1
me = 3
server handler
create goroutine, program continue
disconnect(4)
Follower = 0, term = 0, stage start......
Follower = 1, term = 0, stage start......
follower = 1, term = 0, timeout = 904
follower = 1, term = 0, running.........
server = 0, nextIndex[0] = 1
server = 1, nextIndex[1] = 1
server = 2, nextIndex[2] = 1
server = 3, nextIndex[3] = 1
server = 4, nextIndex[4] = 1
me = 4
server handler
create goroutine, program continue
follower = 0, term = 0, timeout = 978
Follower = 4, term = 0, stage start......
follower = 0, term = 0, running.........
Follower = 2, term = 0, stage start......
follower = 4, term = 0, timeout = 809
follower = 4, term = 0, running.........
Follower = 3, term = 0, stage start......
follower = 2, term = 0, timeout = 815
follower = 2, term = 0, running.........
connect(0)
follower = 3, term = 0, timeout = 833
follower = 3, term = 0, running.........
connect(1)
connect(2)
connect(3)
connect(4)
Test (2B): basic agreement ...
i = 0, index = 1, cmd1 = 0, ok = false
i = 1, index = 1, cmd1 = 0, ok = false
i = 2, index = 1, cmd1 = 0, ok = false
i = 3, index = 1, cmd1 = 0, ok = false
i = 4, index = 1, cmd1 = 0, ok = false
cfg.one, cmd = 100, server = 5
My role = 0, my Id = 1, term = 0, Start a command = 100
My role = 0, my Id = 1, term = 0, I am not a leader, return false
My role = 0, my Id = 1, term = 0, index = -1, term = -1, isLeader = false, Start a command = 100 end
My role = 0, my Id = 2, term = 0, Start a command = 100
My role = 0, my Id = 2, term = 0, I am not a leader, return false
My role = 0, my Id = 2, term = 0, index = -1, term = -1, isLeader = false, Start a command = 100 end
My role = 0, my Id = 3, term = 0, Start a command = 100
My role = 0, my Id = 3, term = 0, I am not a leader, return false
My role = 0, my Id = 3, term = 0, index = -1, term = -1, isLeader = false, Start a command = 100 end
My role = 0, my Id = 4, term = 0, Start a command = 100
My role = 0, my Id = 4, term = 0, I am not a leader, return false
My role = 0, my Id = 4, term = 0, index = -1, term = -1, isLeader = false, Start a command = 100 end
My role = 0, my Id = 0, term = 0, Start a command = 100
My role = 0, my Id = 0, term = 0, I am not a leader, return false
My role = 0, my Id = 0, term = 0, index = -1, term = -1, isLeader = false, Start a command = 100 end
My role = 0, my Id = 1, term = 0, Start a command = 100
My role = 0, my Id = 1, term = 0, I am not a leader, return false
My role = 0, my Id = 1, term = 0, index = -1, term = -1, isLeader = false, Start a command = 100 end
My role = 0, my Id = 2, term = 0, Start a command = 100
My role = 0, my Id = 2, term = 0, I am not a leader, return false
My role = 0, my Id = 2, term = 0, index = -1, term = -1, isLeader = false, Start a command = 100 end
My role = 0, my Id = 3, term = 0, Start a command = 100
My role = 0, my Id = 3, term = 0, I am not a leader, return false
My role = 0, my Id = 3, term = 0, index = -1, term = -1, isLeader = false, Start a command = 100 end
My role = 0, my Id = 4, term = 0, Start a command = 100
My role = 0, my Id = 4, term = 0, I am not a leader, return false
My role = 0, my Id = 4, term = 0, index = -1, term = -1, isLeader = false, Start a command = 100 end
My role = 0, my Id = 0, term = 0, Start a command = 100
My role = 0, my Id = 0, term = 0, I am not a leader, return false
My role = 0, my Id = 0, term = 0, index = -1, term = -1, isLeader = false, Start a command = 100 end
My role = 0, my Id = 1, term = 0, Start a command = 100
My role = 0, my Id = 1, term = 0, I am not a leader, return false
My role = 0, my Id = 1, term = 0, index = -1, term = -1, isLeader = false, Start a command = 100 end
My role = 0, my Id = 2, term = 0, Start a command = 100
My role = 0, my Id = 2, term = 0, I am not a leader, return false
My role = 0, my Id = 2, term = 0, index = -1, term = -1, isLeader = false, Start a command = 100 end
My role = 0, my Id = 3, term = 0, Start a command = 100
My role = 0, my Id = 3, term = 0, I am not a leader, return false
My role = 0, my Id = 3, term = 0, index = -1, term = -1, isLeader = false, Start a command = 100 end
My role = 0, my Id = 4, term = 0, Start a command = 100
My role = 0, my Id = 4, term = 0, I am not a leader, return false
My role = 0, my Id = 4, term = 0, index = -1, term = -1, isLeader = false, Start a command = 100 end
My role = 0, my Id = 0, term = 0, Start a command = 100
My role = 0, my Id = 0, term = 0, I am not a leader, return false
My role = 0, my Id = 0, term = 0, index = -1, term = -1, isLeader = false, Start a command = 100 end
My role = 0, my Id = 1, term = 0, Start a command = 100
My role = 0, my Id = 1, term = 0, I am not a leader, return false
My role = 0, my Id = 1, term = 0, index = -1, term = -1, isLeader = false, Start a command = 100 end
My role = 0, my Id = 2, term = 0, Start a command = 100
My role = 0, my Id = 2, term = 0, I am not a leader, return false
My role = 0, my Id = 2, term = 0, index = -1, term = -1, isLeader = false, Start a command = 100 end
My role = 0, my Id = 3, term = 0, Start a command = 100
My role = 0, my Id = 3, term = 0, I am not a leader, return false
My role = 0, my Id = 3, term = 0, index = -1, term = -1, isLeader = false, Start a command = 100 end
My role = 0, my Id = 4, term = 0, Start a command = 100
My role = 0, my Id = 4, term = 0, I am not a leader, return false
My role = 0, my Id = 4, term = 0, index = -1, term = -1, isLeader = false, Start a command = 100 end
My role = 0, my Id = 0, term = 0, Start a command = 100
My role = 0, my Id = 0, term = 0, I am not a leader, return false
My role = 0, my Id = 0, term = 0, index = -1, term = -1, isLeader = false, Start a command = 100 end
My role = 0, my Id = 1, term = 0, Start a command = 100
My role = 0, my Id = 1, term = 0, I am not a leader, return false
My role = 0, my Id = 1, term = 0, index = -1, term = -1, isLeader = false, Start a command = 100 end
My role = 0, my Id = 2, term = 0, Start a command = 100
My role = 0, my Id = 2, term = 0, I am not a leader, return false
My role = 0, my Id = 2, term = 0, index = -1, term = -1, isLeader = false, Start a command = 100 end
My role = 0, my Id = 3, term = 0, Start a command = 100
My role = 0, my Id = 3, term = 0, I am not a leader, return false
My role = 0, my Id = 3, term = 0, index = -1, term = -1, isLeader = false, Start a command = 100 end
My role = 0, my Id = 4, term = 0, Start a command = 100
My role = 0, my Id = 4, term = 0, I am not a leader, return false
My role = 0, my Id = 4, term = 0, index = -1, term = -1, isLeader = false, Start a command = 100 end
My role = 0, my Id = 0, term = 0, Start a command = 100
My role = 0, my Id = 0, term = 0, I am not a leader, return false
My role = 0, my Id = 0, term = 0, index = -1, term = -1, isLeader = false, Start a command = 100 end
My role = 0, my Id = 1, term = 0, Start a command = 100
My role = 0, my Id = 1, term = 0, I am not a leader, return false
My role = 0, my Id = 1, term = 0, index = -1, term = -1, isLeader = false, Start a command = 100 end
My role = 0, my Id = 2, term = 0, Start a command = 100
My role = 0, my Id = 2, term = 0, I am not a leader, return false
My role = 0, my Id = 2, term = 0, index = -1, term = -1, isLeader = false, Start a command = 100 end
My role = 0, my Id = 3, term = 0, Start a command = 100
My role = 0, my Id = 3, term = 0, I am not a leader, return false
My role = 0, my Id = 3, term = 0, index = -1, term = -1, isLeader = false, Start a command = 100 end
My role = 0, my Id = 4, term = 0, Start a command = 100
My role = 0, my Id = 4, term = 0, I am not a leader, return false
My role = 0, my Id = 4, term = 0, index = -1, term = -1, isLeader = false, Start a command = 100 end
My role = 0, my Id = 0, term = 0, Start a command = 100
My role = 0, my Id = 0, term = 0, I am not a leader, return false
My role = 0, my Id = 0, term = 0, index = -1, term = -1, isLeader = false, Start a command = 100 end
My role = 0, my Id = 1, term = 0, Start a command = 100
My role = 0, my Id = 1, term = 0, I am not a leader, return false
My role = 0, my Id = 1, term = 0, index = -1, term = -1, isLeader = false, Start a command = 100 end
My role = 0, my Id = 2, term = 0, Start a command = 100
My role = 0, my Id = 2, term = 0, I am not a leader, return false
My role = 0, my Id = 2, term = 0, index = -1, term = -1, isLeader = false, Start a command = 100 end
My role = 0, my Id = 3, term = 0, Start a command = 100
My role = 0, my Id = 3, term = 0, I am not a leader, return false
My role = 0, my Id = 3, term = 0, index = -1, term = -1, isLeader = false, Start a command = 100 end
My role = 0, my Id = 4, term = 0, Start a command = 100
My role = 0, my Id = 4, term = 0, I am not a leader, return false
My role = 0, my Id = 4, term = 0, index = -1, term = -1, isLeader = false, Start a command = 100 end
My role = 0, my Id = 0, term = 0, Start a command = 100
My role = 0, my Id = 0, term = 0, I am not a leader, return false
My role = 0, my Id = 0, term = 0, index = -1, term = -1, isLeader = false, Start a command = 100 end
My role = 0, my Id = 1, term = 0, Start a command = 100
My role = 0, my Id = 1, term = 0, I am not a leader, return false
My role = 0, my Id = 1, term = 0, index = -1, term = -1, isLeader = false, Start a command = 100 end
My role = 0, my Id = 2, term = 0, Start a command = 100
My role = 0, my Id = 2, term = 0, I am not a leader, return false
My role = 0, my Id = 2, term = 0, index = -1, term = -1, isLeader = false, Start a command = 100 end
My role = 0, my Id = 3, term = 0, Start a command = 100
My role = 0, my Id = 3, term = 0, I am not a leader, return false
My role = 0, my Id = 3, term = 0, index = -1, term = -1, isLeader = false, Start a command = 100 end
My role = 0, my Id = 4, term = 0, Start a command = 100
My role = 0, my Id = 4, term = 0, I am not a leader, return false
My role = 0, my Id = 4, term = 0, index = -1, term = -1, isLeader = false, Start a command = 100 end
My role = 0, my Id = 0, term = 0, Start a command = 100
My role = 0, my Id = 0, term = 0, I am not a leader, return false
My role = 0, my Id = 0, term = 0, index = -1, term = -1, isLeader = false, Start a command = 100 end
My role = 0, my Id = 1, term = 0, Start a command = 100
My role = 0, my Id = 1, term = 0, I am not a leader, return false
My role = 0, my Id = 1, term = 0, index = -1, term = -1, isLeader = false, Start a command = 100 end
My role = 0, my Id = 2, term = 0, Start a command = 100
My role = 0, my Id = 2, term = 0, I am not a leader, return false
My role = 0, my Id = 2, term = 0, index = -1, term = -1, isLeader = false, Start a command = 100 end
My role = 0, my Id = 3, term = 0, Start a command = 100
My role = 0, my Id = 3, term = 0, I am not a leader, return false
My role = 0, my Id = 3, term = 0, index = -1, term = -1, isLeader = false, Start a command = 100 end
My role = 0, my Id = 4, term = 0, Start a command = 100
My role = 0, my Id = 4, term = 0, I am not a leader, return false
My role = 0, my Id = 4, term = 0, index = -1, term = -1, isLeader = false, Start a command = 100 end
My role = 0, my Id = 0, term = 0, Start a command = 100
My role = 0, my Id = 0, term = 0, I am not a leader, return false
My role = 0, my Id = 0, term = 0, index = -1, term = -1, isLeader = false, Start a command = 100 end
My role = 0, my Id = 1, term = 0, Start a command = 100
My role = 0, my Id = 1, term = 0, I am not a leader, return false
My role = 0, my Id = 1, term = 0, index = -1, term = -1, isLeader = false, Start a command = 100 end
My role = 0, my Id = 2, term = 0, Start a command = 100
My role = 0, my Id = 2, term = 0, I am not a leader, return false
My role = 0, my Id = 2, term = 0, index = -1, term = -1, isLeader = false, Start a command = 100 end
My role = 0, my Id = 3, term = 0, Start a command = 100
My role = 0, my Id = 3, term = 0, I am not a leader, return false
My role = 0, my Id = 3, term = 0, index = -1, term = -1, isLeader = false, Start a command = 100 end
My role = 0, my Id = 4, term = 0, Start a command = 100
My role = 0, my Id = 4, term = 0, I am not a leader, return false
My role = 0, my Id = 4, term = 0, index = -1, term = -1, isLeader = false, Start a command = 100 end
My role = 0, my Id = 0, term = 0, Start a command = 100
My role = 0, my Id = 0, term = 0, I am not a leader, return false
My role = 0, my Id = 0, term = 0, index = -1, term = -1, isLeader = false, Start a command = 100 end
My role = 0, my Id = 1, term = 0, Start a command = 100
My role = 0, my Id = 1, term = 0, I am not a leader, return false
My role = 0, my Id = 1, term = 0, index = -1, term = -1, isLeader = false, Start a command = 100 end
My role = 0, my Id = 2, term = 0, Start a command = 100
My role = 0, my Id = 2, term = 0, I am not a leader, return false
My role = 0, my Id = 2, term = 0, index = -1, term = -1, isLeader = false, Start a command = 100 end
My role = 0, my Id = 3, term = 0, Start a command = 100
My role = 0, my Id = 3, term = 0, I am not a leader, return false
My role = 0, my Id = 3, term = 0, index = -1, term = -1, isLeader = false, Start a command = 100 end
My role = 0, my Id = 4, term = 0, Start a command = 100
My role = 0, my Id = 4, term = 0, I am not a leader, return false
My role = 0, my Id = 4, term = 0, index = -1, term = -1, isLeader = false, Start a command = 100 end
My role = 0, my Id = 0, term = 0, Start a command = 100
My role = 0, my Id = 0, term = 0, I am not a leader, return false
My role = 0, my Id = 0, term = 0, index = -1, term = -1, isLeader = false, Start a command = 100 end
My role = 0, my Id = 1, term = 0, Start a command = 100
My role = 0, my Id = 1, term = 0, I am not a leader, return false
My role = 0, my Id = 1, term = 0, index = -1, term = -1, isLeader = false, Start a command = 100 end
My role = 0, my Id = 2, term = 0, Start a command = 100
My role = 0, my Id = 2, term = 0, I am not a leader, return false
My role = 0, my Id = 2, term = 0, index = -1, term = -1, isLeader = false, Start a command = 100 end
My role = 0, my Id = 3, term = 0, Start a command = 100
My role = 0, my Id = 3, term = 0, I am not a leader, return false
My role = 0, my Id = 3, term = 0, index = -1, term = -1, isLeader = false, Start a command = 100 end
My role = 0, my Id = 4, term = 0, Start a command = 100
My role = 0, my Id = 4, term = 0, I am not a leader, return false
My role = 0, my Id = 4, term = 0, index = -1, term = -1, isLeader = false, Start a command = 100 end
My role = 0, my Id = 0, term = 0, Start a command = 100
My role = 0, my Id = 0, term = 0, I am not a leader, return false
My role = 0, my Id = 0, term = 0, index = -1, term = -1, isLeader = false, Start a command = 100 end
My role = 0, my Id = 1, term = 0, Start a command = 100
My role = 0, my Id = 1, term = 0, I am not a leader, return false
My role = 0, my Id = 1, term = 0, index = -1, term = -1, isLeader = false, Start a command = 100 end
My role = 0, my Id = 2, term = 0, Start a command = 100
My role = 0, my Id = 2, term = 0, I am not a leader, return false
My role = 0, my Id = 2, term = 0, index = -1, term = -1, isLeader = false, Start a command = 100 end
My role = 0, my Id = 3, term = 0, Start a command = 100
My role = 0, my Id = 3, term = 0, I am not a leader, return false
My role = 0, my Id = 3, term = 0, index = -1, term = -1, isLeader = false, Start a command = 100 end
My role = 0, my Id = 4, term = 0, Start a command = 100
My role = 0, my Id = 4, term = 0, I am not a leader, return false
My role = 0, my Id = 4, term = 0, index = -1, term = -1, isLeader = false, Start a command = 100 end
My role = 0, my Id = 0, term = 0, Start a command = 100
My role = 0, my Id = 0, term = 0, I am not a leader, return false
My role = 0, my Id = 0, term = 0, index = -1, term = -1, isLeader = false, Start a command = 100 end
My role = 0, my Id = 1, term = 0, Start a command = 100
My role = 0, my Id = 1, term = 0, I am not a leader, return false
My role = 0, my Id = 1, term = 0, index = -1, term = -1, isLeader = false, Start a command = 100 end
My role = 0, my Id = 2, term = 0, Start a command = 100
My role = 0, my Id = 2, term = 0, I am not a leader, return false
My role = 0, my Id = 2, term = 0, index = -1, term = -1, isLeader = false, Start a command = 100 end
My role = 0, my Id = 3, term = 0, Start a command = 100
My role = 0, my Id = 3, term = 0, I am not a leader, return false
My role = 0, my Id = 3, term = 0, index = -1, term = -1, isLeader = false, Start a command = 100 end
My role = 0, my Id = 4, term = 0, Start a command = 100
My role = 0, my Id = 4, term = 0, I am not a leader, return false
My role = 0, my Id = 4, term = 0, index = -1, term = -1, isLeader = false, Start a command = 100 end
My role = 0, my Id = 0, term = 0, Start a command = 100
My role = 0, my Id = 0, term = 0, I am not a leader, return false
My role = 0, my Id = 0, term = 0, index = -1, term = -1, isLeader = false, Start a command = 100 end
My role = 0, my Id = 1, term = 0, Start a command = 100
My role = 0, my Id = 1, term = 0, I am not a leader, return false
My role = 0, my Id = 1, term = 0, index = -1, term = -1, isLeader = false, Start a command = 100 end
My role = 0, my Id = 2, term = 0, Start a command = 100
My role = 0, my Id = 2, term = 0, I am not a leader, return false
My role = 0, my Id = 2, term = 0, index = -1, term = -1, isLeader = false, Start a command = 100 end
My role = 0, my Id = 3, term = 0, Start a command = 100
My role = 0, my Id = 3, term = 0, I am not a leader, return false
My role = 0, my Id = 3, term = 0, index = -1, term = -1, isLeader = false, Start a command = 100 end
My role = 0, my Id = 4, term = 0, Start a command = 100
My role = 0, my Id = 4, term = 0, I am not a leader, return false
My role = 0, my Id = 4, term = 0, index = -1, term = -1, isLeader = false, Start a command = 100 end
My role = 0, my Id = 0, term = 0, Start a command = 100
My role = 0, my Id = 0, term = 0, I am not a leader, return false
My role = 0, my Id = 0, term = 0, index = -1, term = -1, isLeader = false, Start a command = 100 end
My role = 0, my Id = 1, term = 0, Start a command = 100
My role = 0, my Id = 1, term = 0, I am not a leader, return false
My role = 0, my Id = 1, term = 0, index = -1, term = -1, isLeader = false, Start a command = 100 end
My role = 0, my Id = 2, term = 0, Start a command = 100
My role = 0, my Id = 2, term = 0, I am not a leader, return false
My role = 0, my Id = 2, term = 0, index = -1, term = -1, isLeader = false, Start a command = 100 end
My role = 0, my Id = 3, term = 0, Start a command = 100
My role = 0, my Id = 3, term = 0, I am not a leader, return false
My role = 0, my Id = 3, term = 0, index = -1, term = -1, isLeader = false, Start a command = 100 end
My role = 0, my Id = 4, term = 0, Start a command = 100
My role = 0, my Id = 4, term = 0, I am not a leader, return false
My role = 0, my Id = 4, term = 0, index = -1, term = -1, isLeader = false, Start a command = 100 end
My role = 0, my Id = 0, term = 0, Start a command = 100
My role = 0, my Id = 0, term = 0, I am not a leader, return false
My role = 0, my Id = 0, term = 0, index = -1, term = -1, isLeader = false, Start a command = 100 end
My role = 0, my Id = 1, term = 0, Start a command = 100
My role = 0, my Id = 1, term = 0, I am not a leader, return false
My role = 0, my Id = 1, term = 0, index = -1, term = -1, isLeader = false, Start a command = 100 end
My role = 0, my Id = 2, term = 0, Start a command = 100
My role = 0, my Id = 2, term = 0, I am not a leader, return false
My role = 0, my Id = 2, term = 0, index = -1, term = -1, isLeader = false, Start a command = 100 end
My role = 0, my Id = 3, term = 0, Start a command = 100
My role = 0, my Id = 3, term = 0, I am not a leader, return false
My role = 0, my Id = 3, term = 0, index = -1, term = -1, isLeader = false, Start a command = 100 end
My role = 0, my Id = 4, term = 0, Start a command = 100
My role = 0, my Id = 4, term = 0, I am not a leader, return false
My role = 0, my Id = 4, term = 0, index = -1, term = -1, isLeader = false, Start a command = 100 end
My role = 0, my Id = 0, term = 0, Start a command = 100
My role = 0, my Id = 0, term = 0, I am not a leader, return false
My role = 0, my Id = 0, term = 0, index = -1, term = -1, isLeader = false, Start a command = 100 end
follower = 4, get timer.C channel, time out
Follower = 4, term = 0, stage end......
Candidate = 4, term = 1, stage start......
electTimer = 408
candidate = 4, term = 1, LastLogIndex = 0, LastLogTerm = 0
candidate = 4, term = 1, LastLogIndex = 0, LastLogTerm = 0
candidate = 4, term = 1, LastLogIndex = 0, LastLogTerm = 0
candidate = 4, term = 1, LastLogIndex = 0, LastLogTerm = 0
candidate = 4, rpc executedId = 1, term = 1, set rpcTimeout = 500
candidate = 4, rpc executedId = 1, term = 1, send rpc request start......
candidate = 4, rpc executedId = 0, term = 1, set rpcTimeout = 500
candidate = 4, rpc executedId = 0, term = 1, send rpc request start......
candidate = 4, rpc executedId = 2, term = 1, set rpcTimeout = 500
candidate = 4, rpc executedId = 2, term = 1, send rpc request start......
candidate = 4, rpc executedId = 3, term = 1, set rpcTimeout = 500
candidate = 4, rpc executedId = 3, term = 1, send rpc request start......
My role = 0, my Id = 1, term = 0, args.Term = 1, receive a vote request from candidate = 4
My role = 0, my Id = 1, voteDone, start send channel, candidate = 4
My role = 0, my Id = 1, voteDone, somewhere receive channel, candidate = 4
My role = 0, my Id = 3, term = 0, args.Term = 1, receive a vote request from candidate = 4
My role = 0, my Id = 3, voteDone, start send channel, candidate = 4
My role = 0, my Id = 3, voteDone, somewhere receive channel, candidate = 4
follower = 3, get channel rf.rpcState
follower = 3, vote to somebody
My role = 0, my Id = 0, term = 0, args.Term = 1, receive a vote request from candidate = 4
My role = 0, my Id = 0, voteDone, start send channel, candidate = 4
My role = 0, my Id = 0, voteDone, somewhere receive channel, candidate = 4
candidate = 4, rpc executedId = 1, term = 1, send rpc request end, result = true......
candidate = 4, term = 1, rpcChan has not been closed
%!(EXTRA int=1)candidate = 4, term = 1, rpc executedId = 1, rpcReplyChan sned
candidate = 4, term = 1, rpc executedId = 1, rpcReplyChan end
candidate = 4, term = 1, rpc executedId = 1, rpcReplyChan sned
candidate = 4, term = 1, server = 1, rpc succeeded
candidate = 4, term = 1, server = 1 voted a granted vote
candidate = 4, term = 1, server = 1, IsServerAllTrue = true, ValidServerCount = 5, rpcCount = 2
follower = 0, get channel rf.rpcState
follower = 0, vote to somebody
follower = 0, term = 1, timeout = 986
follower = 0, term = 1, running.........
follower = 1, get channel rf.rpcState
follower = 1, vote to somebody
My role = 0, my Id = 2, term = 0, args.Term = 1, receive a vote request from candidate = 4
My role = 0, my Id = 2, voteDone, start send channel, candidate = 4
My role = 0, my Id = 2, voteDone, somewhere receive channel, candidate = 4
follower = 1, term = 1, timeout = 846
follower = 1, term = 1, running.........
candidate = 4, rpc executedId = 3, term = 1, send rpc request end, result = true......
candidate = 4, term = 1, rpcChan has not been closed
%!(EXTRA int=3)candidate = 4, term = 1, rpc executedId = 3, rpcReplyChan sned
candidate = 4, term = 1, rpc executedId = 3, rpcReplyChan end
candidate = 4, term = 1, rpc executedId = 3, rpcReplyChan sned
candidate = 4, term = 1, rpc executedId = 1, rpcReplyChan sned over
candidate = 4, term = 1, server = 3, rpc succeeded
candidate = 4, term = 1, server = 3 voted a granted vote
candidate = 4, term = 1, rpc executedId = 3, rpcReplyChan sned over
follower = 3, term = 1, timeout = 899
follower = 3, term = 1, running.........
candidate = 4, rpc executedId = 0, term = 1, send rpc request end, result = true......
candidate = 4, term = 1, rpcChan has not been closed
%!(EXTRA int=0)candidate = 4, term = 1, rpc executedId = 0, rpcReplyChan sned
candidate = 4, term = 1, rpc executedId = 0, rpcReplyChan end
candidate = 4, term = 1, rpc executedId = 0, rpcReplyChan sned
candidate = 4, rpc executedId = 2, term = 1, send rpc request end, result = true......
candidate = 4, term = 1, rpcChan has not been closed
%!(EXTRA int=2)candidate = 4, term = 1, rpc executedId = 2, rpcReplyChan sned
candidate = 4, term = 1, rpc executedId = 2, rpcReplyChan end
candidate = 4, term = 1, rpc executedId = 2, rpcReplyChan sned
follower = 2, get channel rf.rpcState
follower = 2, vote to somebody
candidate = 4, term = 1, server = 3, IsServerAllTrue = true, ValidServerCount = 5, rpcCount = 3
candidate = 4, term = 1, server = 0, rpc succeeded
candidate = 4, term = 1, server = 0 voted a granted vote
candidate = 4, term = 1, server = 0, IsServerAllTrue = true, ValidServerCount = 5, rpcCount = 4
candidate = 4, term = 1, server = 2, rpc succeeded
candidate = 4, term = 1, server = 2 voted a granted vote
follower = 2, term = 1, timeout = 889
follower = 2, term = 1, running.........
candidate = 4, term = 1, rpc executedId = 2, rpcReplyChan sned over
candidate = 4, term = 1, rpc executedId = 0, rpcReplyChan sned over
candidate = 4, term = 1, server = 2, IsServerAllTrue = true, ValidServerCount = 5, rpcCount = 5
candidate = 4, term = 1, numberOfVotes = 5, ValidServerCount 5, calculateVoutes start
There is quorum
candidate = 4, term = 1, get majority votes
Candidate = 4, term = 1, stage end......
leader = 4, term = 1, I am a leader now
leader = 4, term = 1, start a heartbeatTimer
My role = 0, my Id = 1, term = 1, Start a command = 100
My role = 0, my Id = 1, term = 1, I am not a leader, return false
My role = 0, my Id = 1, term = 1, index = -1, term = -1, isLeader = false, Start a command = 100 end
My role = 0, my Id = 2, term = 1, Start a command = 100
My role = 0, my Id = 2, term = 1, I am not a leader, return false
My role = 0, my Id = 2, term = 1, index = -1, term = -1, isLeader = false, Start a command = 100 end
My role = 0, my Id = 3, term = 1, Start a command = 100
My role = 0, my Id = 3, term = 1, I am not a leader, return false
My role = 0, my Id = 3, term = 1, index = -1, term = -1, isLeader = false, Start a command = 100 end
My role = 2, my Id = 4, term = 1, Start a command = 100
My role = 2, my Id = 4, term = 1, I am leader
server = 0, nextIndex[0] = 2
server = 1, nextIndex[1] = 2
server = 2, nextIndex[2] = 2
server = 3, nextIndex[3] = 2
server = 4, nextIndex[4] = 2
My role = 2, my Id = 4, term = 1, rf.log[0].Term = 0, rf.log[0].Entry = 
My role = 2, my Id = 4, term = 1, rf.log[1].Term = 1, rf.log[1].Entry = 100
My role = 2, my Id = 4, term = 1, index = 1, term = 1, isLeader = true, Start a command = 100 end
Found leader, index = 1
i = 0, index = 1, cmd1 = 0, ok = false
i = 1, index = 1, cmd1 = 0, ok = false
i = 2, index = 1, cmd1 = 0, ok = false
i = 3, index = 1, cmd1 = 0, ok = false
i = 4, index = 1, cmd1 = 0, ok = false
i = 0, index = 1, cmd1 = 0, ok = false
i = 1, index = 1, cmd1 = 0, ok = false
i = 2, index = 1, cmd1 = 0, ok = false
i = 3, index = 1, cmd1 = 0, ok = false
i = 4, index = 1, cmd1 = 0, ok = false
i = 0, index = 1, cmd1 = 0, ok = false
i = 1, index = 1, cmd1 = 0, ok = false
i = 2, index = 1, cmd1 = 0, ok = false
i = 3, index = 1, cmd1 = 0, ok = false
i = 4, index = 1, cmd1 = 0, ok = false
leader = 4, term = 1, heartbeat timerout
leader = 4, term = 1, rf.nextIndex[0] = 2
leader = 4, term = 1, len(rf.log) = 2
leader = 4, term = 1, entries[0] = {100 1}
leader = 4, term = 1, rf.nextIndex[1] = 2
leader = 4, term = 1, len(rf.log) = 2
leader = 4, term = 1, entries[0] = {100 1}
leader = 4, term = 1, rf.nextIndex[2] = 2
leader = 4, term = 1, len(rf.log) = 2
leader = 4, term = 1, entries[0] = {100 1}
leader = 4, term = 1, rf.nextIndex[3] = 2
leader = 4, term = 1, len(rf.log) = 2
leader = 4, term = 1, entries[0] = {100 1}
leader = 4, rpc executedId = 0, term = 1, set rpcTimeout = 500
leader = 4, term = 1, rpc executedId = 0, send rpc request start......
leader = 4, rpc executedId = 1, term = 1, set rpcTimeout = 500
leader = 4, term = 1, rpc executedId = 1, send rpc request start......
leader = 4, rpc executedId = 2, term = 1, set rpcTimeout = 500
leader = 4, term = 1, rpc executedId = 2, send rpc request start......
leader = 4, rpc executedId = 3, term = 1, set rpcTimeout = 500
leader = 4, term = 1, rpc executedId = 3, send rpc request start......
My role = 0, Id = 0, term = 1, get heartbeat from leader = 4
My role = 0, Id = 0, args.Term = 1, rf.currentTerm = 1
My role = 0, Id = 0, term = 1, AppendEntries true
My role = 0, Id = 2, term = 1, get heartbeat from leader = 4
My role = 0, Id = 2, args.Term = 1, rf.currentTerm = 1
My role = 0, Id = 2, term = 1, AppendEntries true
My role = 0, Id = 2, term = 1, AppendEntries, len(rf.log) = PrevLogIndex
My role = 0, Id = 2, term = 1, AppendEntries, log[0].Entry = 
My role = 0, Id = 2, term = 1, AppendEntries, log[1].Entry = 100
My role = 0, Id = 2, term = 1, AppendEntries, len(rf.log) = PrevLogIndex, len(rf.log) = 1, success = true
My role = 0, Id = 2, term = 1, send heartbeatChan start
My role = 0, Id = 2, term = 1, send heartbeatChan end
My role = 0, Id = 1, term = 1, get heartbeat from leader = 4
My role = 0, Id = 1, args.Term = 1, rf.currentTerm = 1
My role = 0, Id = 1, term = 1, AppendEntries true
My role = 0, Id = 1, term = 1, AppendEntries, len(rf.log) = PrevLogIndex
My role = 0, Id = 1, term = 1, AppendEntries, log[0].Entry = 
My role = 0, Id = 1, term = 1, AppendEntries, log[1].Entry = 100
My role = 0, Id = 1, term = 1, AppendEntries, len(rf.log) = PrevLogIndex, len(rf.log) = 1, success = true
My role = 0, Id = 1, term = 1, send heartbeatChan start
My role = 0, Id = 1, term = 1, send heartbeatChan end
My role = 0, Id = 3, term = 1, get heartbeat from leader = 4
My role = 0, Id = 3, args.Term = 1, rf.currentTerm = 1
My role = 0, Id = 3, term = 1, AppendEntries true
My role = 0, Id = 3, term = 1, AppendEntries, len(rf.log) = PrevLogIndex
My role = 0, Id = 3, term = 1, AppendEntries, log[0].Entry = 
My role = 0, Id = 3, term = 1, AppendEntries, log[1].Entry = 100
My role = 0, Id = 3, term = 1, AppendEntries, len(rf.log) = PrevLogIndex, len(rf.log) = 1, success = true
My role = 0, Id = 3, term = 1, send heartbeatChan start
My role = 0, Id = 3, term = 1, send heartbeatChan end
leader = 4, term = 1, rpc executedId = 2, send rpc request end, result = true......
leader = 4, term = 1, rpc executedId = 2, rpcChan has not been closed
leader = 4, term = 1, rpc executedId = 2, rpcChan sned
leader = 4, term = 1, rpc executedId = 2, rpcChan end
leader = 4, term = 1, rpc executedId = 1, send rpc request end, result = true......
follower = 3, get channel rf.rpcState
follower = 2, get channel rf.rpcState
leader = 4, term = 1, rpc executedId = 2, rpcReplyChan sned
My role = 0, Id = 0, term = 1, AppendEntries, len(rf.log) = PrevLogIndex
My role = 0, Id = 0, term = 1, AppendEntries, log[0].Entry = 
leader = 4, term = 1, rpc executedId = 2, rpcReplyChan sned over
leader = 4, term = 1, rpc executedId = 3, send rpc request end, result = true......
leader = 4, term = 1, rpc executedId = 3, rpcChan has not been closed
leader = 4, term = 1, rpc executedId = 3, rpcChan sned
leader = 4, term = 1, rpc executedId = 3, rpcChan end
leader = 4, term = 1, rpc executedId = 1, rpcChan has not been closed
leader = 4, term = 1, rpc executedId = 1, rpcChan sned
leader = 4, term = 1, rpc executedId = 1, rpcChan end
leader = 4, term = 1, follower = 2, rpc succeed
leader = 4, term = 1, isServerAllTrue = true, ValidServerCount = 5, rpcSucceedCount = 2
leader = 4, term = 1, rpc executedId = 1, rpcReplyChan sned
leader = 4, term = 1, rpc executedId = 3, rpcReplyChan sned
follower = 3, term = 1, isApplyMsg = true
follower = 3, term = 1, timeout = 931
follower = 3, term = 1, running.........
leader = 4, term = 1, follower = 1, rpc succeed
follower = 2, term = 1, isApplyMsg = true
My role = 0, Id = 0, term = 1, AppendEntries, log[1].Entry = 100
follower = 2, term = 1, applyChan send
follower = 2, term = 1, applyChan send end
leader = 4, term = 1, rpc executedId = 1, rpcReplyChan sned over
follower = 1, get channel rf.rpcState
follower = 1, term = 1, isApplyMsg = true
follower = 2, term = 1, timeout = 962
follower = 2, term = 1, running.........
follower = 3, term = 1, applyChan send
follower = 3, term = 1, applyChan send end
follower = 1, term = 1, applyChan send
follower = 1, term = 1, applyChan send end
follower = 1, term = 1, timeout = 863
leader = 4, term = 1, isServerAllTrue = true, ValidServerCount = 5, rpcSucceedCount = 3
My role = 0, Id = 0, term = 1, AppendEntries, len(rf.log) = PrevLogIndex, len(rf.log) = 1, success = true
My role = 0, Id = 0, term = 1, send heartbeatChan start
leader = 4, term = 1, rpc executedId = 3, rpcReplyChan sned over
follower = 0, get channel rf.rpcState
leader = 4, term = 1, follower = 3, rpc succeed
leader = 4, term = 1, isServerAllTrue = true, ValidServerCount = 5, rpcSucceedCount = 4
follower = 1, term = 1, running.........
My role = 0, Id = 0, term = 1, send heartbeatChan end
follower = 0, term = 1, isApplyMsg = true
follower = 0, term = 1, timeout = 884
follower = 0, term = 1, running.........
follower = 0, term = 1, applyChan send
follower = 0, term = 1, applyChan send end
leader = 4, term = 1, rpc executedId = 0, send rpc request end, result = true......
leader = 4, term = 1, rpc executedId = 0, rpcChan has not been closed
leader = 4, term = 1, rpc executedId = 0, rpcChan sned
leader = 4, term = 1, rpc executedId = 0, rpcChan end
leader = 4, term = 1, rpc executedId = 0, rpcReplyChan sned
leader = 4, term = 1, follower = 0, rpc succeed
leader = 4, term = 1, isServerAllTrue = true, ValidServerCount = 5, rpcSucceedCount = 5
leader = 4, term = 1, ValidServerCount = 5, rpcSucceedCount = 5, a heartbeat round is end
There is quorum
leader = 4, term = 1, isHeartbeat = false
leader = 4, term = 1, majority server has duplicated, commitIndex = 1, exit appendEntries
leader = 4, term = 1, heartbeat operation end, reset the leaderTimer
leader = 4, term = 1, stage of leader end
leader = 4, term = 1, start a heartbeatTimer
leader = 4, term = 1,len(rf.log) = 2, commitIndex = 1, send applyMsg
leader = 4, term = 1,len(rf.log) = 2, commitIndex = 1, send applyMsg end
leader = 4, term = 1, rpc executedId = 0, rpcReplyChan sned over
i = 0, index = 1, cmd1 = 100, ok = true
i = 1, index = 1, cmd1 = 100, ok = true
i = 2, index = 1, cmd1 = 100, ok = true
i = 3, index = 1, cmd1 = 100, ok = true
i = 4, index = 1, cmd1 = 100, ok = true
i = 0, index = 2, cmd1 = 0, ok = false
i = 1, index = 2, cmd1 = 0, ok = false
i = 2, index = 2, cmd1 = 0, ok = false
i = 3, index = 2, cmd1 = 0, ok = false
i = 4, index = 2, cmd1 = 0, ok = false
cfg.one, cmd = 200, server = 5
My role = 0, my Id = 1, term = 1, Start a command = 200
My role = 0, my Id = 1, term = 1, I am not a leader, return false
My role = 0, my Id = 1, term = 1, index = -1, term = -1, isLeader = false, Start a command = 200 end
My role = 0, my Id = 2, term = 1, Start a command = 200
My role = 0, my Id = 2, term = 1, I am not a leader, return false
My role = 0, my Id = 2, term = 1, index = -1, term = -1, isLeader = false, Start a command = 200 end
My role = 0, my Id = 3, term = 1, Start a command = 200
My role = 0, my Id = 3, term = 1, I am not a leader, return false
My role = 0, my Id = 3, term = 1, index = -1, term = -1, isLeader = false, Start a command = 200 end
My role = 2, my Id = 4, term = 1, Start a command = 200
My role = 2, my Id = 4, term = 1, I am leader
server = 0, nextIndex[0] = 3
server = 1, nextIndex[1] = 3
server = 2, nextIndex[2] = 3
server = 3, nextIndex[3] = 3
server = 4, nextIndex[4] = 3
My role = 2, my Id = 4, term = 1, rf.log[0].Term = 0, rf.log[0].Entry = 
My role = 2, my Id = 4, term = 1, rf.log[1].Term = 1, rf.log[1].Entry = 100
My role = 2, my Id = 4, term = 1, rf.log[2].Term = 1, rf.log[2].Entry = 200
My role = 2, my Id = 4, term = 1, index = 2, term = 1, isLeader = true, Start a command = 200 end
Found leader, index = 2
i = 0, index = 2, cmd1 = 0, ok = false
i = 1, index = 2, cmd1 = 0, ok = false
i = 2, index = 2, cmd1 = 0, ok = false
i = 3, index = 2, cmd1 = 0, ok = false
i = 4, index = 2, cmd1 = 0, ok = false
i = 0, index = 2, cmd1 = 0, ok = false
i = 1, index = 2, cmd1 = 0, ok = false
i = 2, index = 2, cmd1 = 0, ok = false
i = 3, index = 2, cmd1 = 0, ok = false
i = 4, index = 2, cmd1 = 0, ok = false
i = 0, index = 2, cmd1 = 0, ok = false
i = 1, index = 2, cmd1 = 0, ok = false
i = 2, index = 2, cmd1 = 0, ok = false
i = 3, index = 2, cmd1 = 0, ok = false
i = 4, index = 2, cmd1 = 0, ok = false
i = 0, index = 2, cmd1 = 0, ok = false
i = 1, index = 2, cmd1 = 0, ok = false
i = 2, index = 2, cmd1 = 0, ok = false
i = 3, index = 2, cmd1 = 0, ok = false
i = 4, index = 2, cmd1 = 0, ok = false
i = 0, index = 2, cmd1 = 0, ok = false
i = 1, index = 2, cmd1 = 0, ok = false
i = 2, index = 2, cmd1 = 0, ok = false
i = 3, index = 2, cmd1 = 0, ok = false
i = 4, index = 2, cmd1 = 0, ok = false
leader = 4, term = 1, heartbeat timerout
leader = 4, term = 1, rf.nextIndex[0] = 3
leader = 4, term = 1, len(rf.log) = 3
leader = 4, term = 1, entries[0] = {200 1}
leader = 4, term = 1, rf.nextIndex[1] = 3
leader = 4, term = 1, len(rf.log) = 3
leader = 4, term = 1, entries[0] = {200 1}
leader = 4, term = 1, rf.nextIndex[2] = 3
leader = 4, term = 1, len(rf.log) = 3
leader = 4, term = 1, entries[0] = {200 1}
leader = 4, term = 1, rf.nextIndex[3] = 3
leader = 4, term = 1, len(rf.log) = 3
leader = 4, term = 1, entries[0] = {200 1}
leader = 4, rpc executedId = 0, term = 1, set rpcTimeout = 500
leader = 4, term = 1, rpc executedId = 0, send rpc request start......
leader = 4, rpc executedId = 1, term = 1, set rpcTimeout = 500
leader = 4, term = 1, rpc executedId = 1, send rpc request start......
leader = 4, rpc executedId = 3, term = 1, set rpcTimeout = 500
leader = 4, term = 1, rpc executedId = 3, send rpc request start......
My role = 0, Id = 0, term = 1, get heartbeat from leader = 4
My role = 0, Id = 0, args.Term = 1, rf.currentTerm = 1
My role = 0, Id = 0, term = 1, AppendEntries true
My role = 0, Id = 0, term = 1, AppendEntries, len(rf.log) = PrevLogIndex
My role = 0, Id = 0, term = 1, AppendEntries, len(rf.log) = PrevLogIndex, len(rf.log) != 1, success = false
My role = 0, Id = 0, term = 1, send heartbeatChan start
My role = 0, Id = 0, term = 1, send heartbeatChan end
My role = 0, Id = 1, term = 1, get heartbeat from leader = 4
My role = 0, Id = 1, args.Term = 1, rf.currentTerm = 1
My role = 0, Id = 1, term = 1, AppendEntries true
My role = 0, Id = 1, term = 1, AppendEntries, len(rf.log) = PrevLogIndex
My role = 0, Id = 1, term = 1, AppendEntries, len(rf.log) = PrevLogIndex, len(rf.log) != 1, success = false
My role = 0, Id = 1, term = 1, send heartbeatChan start
My role = 0, Id = 1, term = 1, send heartbeatChan end
follower = 0, get channel rf.rpcState
follower = 0, term = 1, timeout = 851
follower = 0, term = 1, running.........
follower = 1, get channel rf.rpcState
follower = 1, term = 1, timeout = 826
follower = 1, term = 1, running.........
leader = 4, rpc executedId = 2, term = 1, set rpcTimeout = 500
leader = 4, term = 1, rpc executedId = 2, send rpc request start......
leader = 4, term = 1, rpc executedId = 0, send rpc request end, result = true......
leader = 4, term = 1, rpc executedId = 0, rpcChan has not been closed
leader = 4, term = 1, rpc executedId = 1, send rpc request end, result = true......
leader = 4, term = 1, rpc executedId = 1, rpcChan has not been closed
leader = 4, term = 1, rpc executedId = 1, rpcChan sned
leader = 4, term = 1, rpc executedId = 1, rpcChan end
leader = 4, term = 1, rpc executedId = 1, rpcReplyChan sned
leader = 4, term = 1, rpc executedId = 0, rpcChan sned
leader = 4, term = 1, rpc executedId = 0, rpcChan end
leader = 4, term = 1, follower = 1, rpc succeed
appendEntries failure......
leader = 4, term = 1, rf.nextIndex[1] = 2
leader = 4, term = 1, len(rf.log) = 3
leader = 4, term = 1, rpc executedId = 1, rpcReplyChan sned over
leader = 4, term = 1, entries[0] = {100 1}
leader = 4, term = 1, entries[1] = {200 1}
My role = 0, Id = 3, term = 1, get heartbeat from leader = 4
My role = 0, Id = 3, args.Term = 1, rf.currentTerm = 1
My role = 0, Id = 3, term = 1, AppendEntries true
My role = 0, Id = 3, term = 1, AppendEntries, len(rf.log) = PrevLogIndex
My role = 0, Id = 3, term = 1, AppendEntries, len(rf.log) = PrevLogIndex, len(rf.log) != 1, success = false
My role = 0, Id = 3, term = 1, send heartbeatChan start
My role = 0, Id = 3, term = 1, send heartbeatChan end
leader = 4, rpc executedId = 1, term = 1, set rpcTimeout = 500
leader = 4, term = 1, rpc executedId = 1, send rpc request start......
My role = 0, Id = 2, term = 1, get heartbeat from leader = 4
My role = 0, Id = 2, args.Term = 1, rf.currentTerm = 1
My role = 0, Id = 2, term = 1, AppendEntries true
My role = 0, Id = 2, term = 1, AppendEntries, len(rf.log) = PrevLogIndex
My role = 0, Id = 2, term = 1, AppendEntries, len(rf.log) = PrevLogIndex, len(rf.log) != 1, success = false
My role = 0, Id = 2, term = 1, send heartbeatChan start
My role = 0, Id = 2, term = 1, send heartbeatChan end
leader = 4, term = 1, rpc executedId = 3, send rpc request end, result = true......
leader = 4, term = 1, rpc executedId = 3, rpcChan has not been closed
leader = 4, term = 1, rpc executedId = 3, rpcChan sned
leader = 4, term = 1, rpc executedId = 3, rpcChan end
leader = 4, term = 1, rpc executedId = 3, rpcReplyChan sned
leader = 4, term = 1, rpc executedId = 0, rpcReplyChan sned
leader = 4, term = 1, follower = 3, rpc succeed
appendEntries failure......
leader = 4, term = 1, follower = 0, rpc succeed
appendEntries failure......
leader = 4, term = 1, rf.nextIndex[3] = 2
leader = 4, term = 1, len(rf.log) = 3
leader = 4, term = 1, entries[0] = {100 1}
leader = 4, term = 1, entries[1] = {200 1}
leader = 4, term = 1, rf.nextIndex[0] = 2
leader = 4, term = 1, len(rf.log) = 3
follower = 3, get channel rf.rpcState
leader = 4, term = 1, rpc executedId = 2, send rpc request end, result = true......
leader = 4, term = 1, rpc executedId = 0, rpcReplyChan sned over
leader = 4, term = 1, rpc executedId = 3, rpcReplyChan sned over
leader = 4, term = 1, rpc executedId = 2, rpcChan has not been closed
leader = 4, term = 1, rpc executedId = 2, rpcChan sned
leader = 4, rpc executedId = 3, term = 1, set rpcTimeout = 500
leader = 4, term = 1, rpc executedId = 3, send rpc request start......
My role = 0, Id = 1, term = 1, get heartbeat from leader = 4
My role = 0, Id = 1, args.Term = 1, rf.currentTerm = 1
My role = 0, Id = 1, term = 1, AppendEntries true
My role = 0, Id = 1, term = 1, AppendEntries, len(rf.log) > PrevLogIndex
My role = 0, Id = 1, term = 1, AppendEntries, rf.log[args.PrevLogIndex].Term == args.PrevLogTerm, reply.Success = true
My role = 0, Id = 1, term = 1, AppendEntries, log[0].Entry = 
My role = 0, Id = 1, term = 1, AppendEntries, log[1].Entry = 100
My role = 0, Id = 1, term = 1, AppendEntries, log[2].Entry = 200
My role = 0, Id = 1, term = 1, send heartbeatChan start
follower = 2, get channel rf.rpcState
My role = 0, Id = 1, term = 1, send heartbeatChan end
leader = 4, term = 1, entries[0] = {100 1}
leader = 4, term = 1, entries[1] = {200 1}
follower = 1, get channel rf.rpcState
follower = 1, term = 1, isApplyMsg = true
follower = 1, term = 1, timeout = 885
follower = 1, term = 1, running.........
follower = 3, term = 1, timeout = 817
follower = 3, term = 1, running.........
follower = 2, term = 1, timeout = 980
follower = 2, term = 1, running.........
leader = 4, term = 1, rpc executedId = 1, send rpc request end, result = true......
leader = 4, term = 1, rpc executedId = 1, rpcChan has not been closed
leader = 4, term = 1, rpc executedId = 1, rpcChan sned
leader = 4, term = 1, rpc executedId = 1, rpcChan end
leader = 4, term = 1, rpc executedId = 1, rpcReplyChan sned
My role = 0, Id = 3, term = 1, get heartbeat from leader = 4
My role = 0, Id = 3, args.Term = 1, rf.currentTerm = 1
My role = 0, Id = 3, term = 1, AppendEntries true
My role = 0, Id = 3, term = 1, AppendEntries, len(rf.log) > PrevLogIndex
My role = 0, Id = 3, term = 1, AppendEntries, rf.log[args.PrevLogIndex].Term == args.PrevLogTerm, reply.Success = true
My role = 0, Id = 3, term = 1, AppendEntries, log[0].Entry = 
My role = 0, Id = 3, term = 1, AppendEntries, log[1].Entry = 100
My role = 0, Id = 3, term = 1, AppendEntries, log[2].Entry = 200
My role = 0, Id = 3, term = 1, send heartbeatChan start
My role = 0, Id = 3, term = 1, send heartbeatChan end
leader = 4, term = 1, follower = 1, rpc succeed
follower = 3, get channel rf.rpcState
leader = 4, term = 1, isServerAllTrue = true, ValidServerCount = 5, rpcSucceedCount = 5
leader = 4, term = 1, ValidServerCount = 5, rpcSucceedCount = 5, a heartbeat round is end
There is quorum
leader = 4, term = 1, less server has duplicated, start new appendEntries
leader = 4, term = 1, heartbeat operation end, reset the leaderTimer
leader = 4, term = 1, stage of leader end
leader = 4, term = 1, start a heartbeatTimer
leader = 4, rpc executedId = 0, term = 1, set rpcTimeout = 500
leader = 4, term = 1, rpc executedId = 2, rpcChan end
leader = 4, term = 1, rpc executedId = 2, rpcReplyChan sned
leader = 4, term = 1, rpc executedId = 0, send rpc request start......
leader = 4, term = 1, rpc executedId = 3, send rpc request end, result = true......
leader = 4, term = 1, rpc executedId = 3, rpcChan has not been closed
leader = 4, term = 1, rpc executedId = 3, rpcChan sned
leader = 4, term = 1, rpc executedId = 3, rpcChan end
leader = 4, term = 1, rpc executedId = 3, rpcReplyChan sned
leader = 4, term = 1, rpc executedId = 1, rpcReplyChan sned over
follower = 3, term = 1, isApplyMsg = true
follower = 3, term = 1, timeout = 997
follower = 3, term = 1, running.........
follower = 1, term = 1, applyChan send
follower = 1, term = 1, applyChan send end
follower = 3, term = 1, applyChan send
follower = 3, term = 1, applyChan send end
My role = 0, Id = 0, term = 1, get heartbeat from leader = 4
My role = 0, Id = 0, args.Term = 1, rf.currentTerm = 1
My role = 0, Id = 0, term = 1, AppendEntries true
My role = 0, Id = 0, term = 1, AppendEntries, len(rf.log) > PrevLogIndex
My role = 0, Id = 0, term = 1, AppendEntries, rf.log[args.PrevLogIndex].Term == args.PrevLogTerm, reply.Success = true
My role = 0, Id = 0, term = 1, AppendEntries, log[0].Entry = 
My role = 0, Id = 0, term = 1, AppendEntries, log[1].Entry = 100
My role = 0, Id = 0, term = 1, AppendEntries, log[2].Entry = 200
My role = 0, Id = 0, term = 1, send heartbeatChan start
My role = 0, Id = 0, term = 1, send heartbeatChan end
follower = 0, get channel rf.rpcState
follower = 0, term = 1, isApplyMsg = true
follower = 0, term = 1, timeout = 927
follower = 0, term = 1, running.........
follower = 0, term = 1, applyChan send
follower = 0, term = 1, applyChan send end
leader = 4, term = 1, rpc executedId = 0, send rpc request end, result = true......
leader = 4, term = 1, rpc executedId = 0, rpcChan has not been closed
leader = 4, term = 1, rpc executedId = 0, rpcChan sned
leader = 4, term = 1, rpc executedId = 0, rpcChan end
leader = 4, term = 1, rpc executedId = 0, rpcReplyChan sned
i = 0, index = 2, cmd1 = 200, ok = true
i = 1, index = 2, cmd1 = 200, ok = true
i = 2, index = 2, cmd1 = 0, ok = false
i = 3, index = 2, cmd1 = 200, ok = true
i = 4, index = 2, cmd1 = 0, ok = false
i = 0, index = 2, cmd1 = 200, ok = true
i = 1, index = 2, cmd1 = 200, ok = true
i = 2, index = 2, cmd1 = 0, ok = false
i = 3, index = 2, cmd1 = 200, ok = true
i = 4, index = 2, cmd1 = 0, ok = false
i = 0, index = 2, cmd1 = 200, ok = true
i = 1, index = 2, cmd1 = 200, ok = true
i = 2, index = 2, cmd1 = 0, ok = false
i = 3, index = 2, cmd1 = 200, ok = true
i = 4, index = 2, cmd1 = 0, ok = false
i = 0, index = 2, cmd1 = 200, ok = true
i = 1, index = 2, cmd1 = 200, ok = true
i = 2, index = 2, cmd1 = 0, ok = false
i = 3, index = 2, cmd1 = 200, ok = true
i = 4, index = 2, cmd1 = 0, ok = false
i = 0, index = 2, cmd1 = 200, ok = true
i = 1, index = 2, cmd1 = 200, ok = true
i = 2, index = 2, cmd1 = 0, ok = false
i = 3, index = 2, cmd1 = 200, ok = true
i = 4, index = 2, cmd1 = 0, ok = false
leader = 4, term = 1, heartbeat timerout
leader = 4, term = 1, rf.nextIndex[0] = 2
leader = 4, term = 1, len(rf.log) = 3
leader = 4, term = 1, entries[0] = {100 1}
leader = 4, term = 1, entries[1] = {200 1}
leader = 4, term = 1, rf.nextIndex[1] = 3
leader = 4, term = 1, len(rf.log) = 3
leader = 4, term = 1, entries[0] = {200 1}
leader = 4, term = 1, rf.nextIndex[2] = 3
leader = 4, term = 1, len(rf.log) = 3
leader = 4, term = 1, entries[0] = {200 1}
leader = 4, term = 1, rf.nextIndex[3] = 2
leader = 4, term = 1, len(rf.log) = 3
leader = 4, term = 1, entries[0] = {100 1}
leader = 4, term = 1, entries[1] = {200 1}
leader = 4, rpc executedId = 0, term = 1, set rpcTimeout = 500
leader = 4, term = 1, rpc executedId = 0, send rpc request start......
leader = 4, rpc executedId = 1, term = 1, set rpcTimeout = 500
leader = 4, rpc executedId = 2, term = 1, set rpcTimeout = 500
leader = 4, term = 1, rpc executedId = 2, send rpc request start......
leader = 4, rpc executedId = 3, term = 1, set rpcTimeout = 500
leader = 4, term = 1, rpc executedId = 3, send rpc request start......
My role = 0, Id = 2, term = 1, get heartbeat from leader = 4
My role = 0, Id = 2, args.Term = 1, rf.currentTerm = 1
My role = 0, Id = 2, term = 1, AppendEntries true
My role = 0, Id = 2, term = 1, AppendEntries, len(rf.log) = PrevLogIndex
My role = 0, Id = 2, term = 1, AppendEntries, len(rf.log) = PrevLogIndex, len(rf.log) != 1, success = false
My role = 0, Id = 2, term = 1, send heartbeatChan start
My role = 0, Id = 2, term = 1, send heartbeatChan end
My role = 0, Id = 3, term = 1, get heartbeat from leader = 4
My role = 0, Id = 3, args.Term = 1, rf.currentTerm = 1
My role = 0, Id = 3, term = 1, AppendEntries true
My role = 0, Id = 3, term = 1, AppendEntries, len(rf.log) > PrevLogIndex
My role = 0, Id = 3, term = 1, AppendEntries, rf.log[args.PrevLogIndex].Term == args.PrevLogTerm, reply.Success = true
My role = 0, Id = 3, term = 1, AppendEntries, log[0].Entry = 
My role = 0, Id = 3, term = 1, AppendEntries, log[1].Entry = 100
My role = 0, Id = 3, term = 1, AppendEntries, log[2].Entry = 200
My role = 0, Id = 3, term = 1, send heartbeatChan start
My role = 0, Id = 3, term = 1, send heartbeatChan end
My role = 0, Id = 0, term = 1, get heartbeat from leader = 4
My role = 0, Id = 0, args.Term = 1, rf.currentTerm = 1
My role = 0, Id = 0, term = 1, AppendEntries true
My role = 0, Id = 0, term = 1, AppendEntries, len(rf.log) > PrevLogIndex
My role = 0, Id = 0, term = 1, AppendEntries, rf.log[args.PrevLogIndex].Term == args.PrevLogTerm, reply.Success = true
My role = 0, Id = 0, term = 1, AppendEntries, log[0].Entry = 
My role = 0, Id = 0, term = 1, AppendEntries, log[1].Entry = 100
My role = 0, Id = 0, term = 1, AppendEntries, log[2].Entry = 200
My role = 0, Id = 0, term = 1, send heartbeatChan start
leader = 4, term = 1, rpc executedId = 2, send rpc request end, result = true......
follower = 2, get channel rf.rpcState
follower = 3, get channel rf.rpcState
follower = 3, term = 1, isApplyMsg = true
follower = 3, term = 1, applyChan send
follower = 3, term = 1, applyChan send end
leader = 4, term = 1, rpc executedId = 1, send rpc request start......
leader = 4, term = 1, rpc executedId = 3, send rpc request end, result = true......
follower = 3, term = 1, timeout = 984
My role = 0, Id = 0, term = 1, send heartbeatChan end
follower = 2, term = 1, timeout = 860
follower = 2, term = 1, running.........
follower = 3, term = 1, running.........
leader = 4, term = 1, rpc executedId = 3, rpcChan has not been closed
leader = 4, term = 1, rpc executedId = 3, rpcChan sned
leader = 4, term = 1, rpc executedId = 3, rpcChan end
leader = 4, term = 1, rpc executedId = 3, rpcReplyChan sned
follower = 0, get channel rf.rpcState
follower = 0, term = 1, isApplyMsg = true
leader = 4, term = 1, follower = 3, rpc succeed
leader = 4, term = 1, isServerAllTrue = true, ValidServerCount = 5, rpcSucceedCount = 2
follower = 0, term = 1, timeout = 879
follower = 0, term = 1, running.........
leader = 4, term = 1, rpc executedId = 2, rpcChan has not been closed
leader = 4, term = 1, rpc executedId = 2, rpcChan sned
leader = 4, term = 1, rpc executedId = 2, rpcChan end
leader = 4, term = 1, rpc executedId = 2, rpcReplyChan sned
follower = 0, term = 1, applyChan send
follower = 0, term = 1, applyChan send end
leader = 4, term = 1, follower = 2, rpc succeed
leader = 4, term = 1, rpc executedId = 3, rpcReplyChan sned over
leader = 4, term = 1, rpc executedId = 2, rpcReplyChan sned over
leader = 4, term = 1, rpc executedId = 0, send rpc request end, result = true......
leader = 4, term = 1, rpc executedId = 0, rpcChan has not been closed
leader = 4, term = 1, rpc executedId = 0, rpcChan sned
appendEntries failure......
leader = 4, term = 1, rf.nextIndex[2] = 2
leader = 4, term = 1, len(rf.log) = 3
leader = 4, term = 1, entries[0] = {100 1}
leader = 4, term = 1, entries[1] = {200 1}
leader = 4, term = 1, rpc executedId = 0, rpcReplyChan sned
leader = 4, term = 1, rpc executedId = 0, rpcChan end
leader = 4, term = 1, rpc executedId = 0, rpcReplyChan sned over
leader = 4, term = 1, follower = 0, rpc succeed
leader = 4, term = 1, isServerAllTrue = true, ValidServerCount = 5, rpcSucceedCount = 4
leader = 4, rpc executedId = 2, term = 1, set rpcTimeout = 500
leader = 4, term = 1, rpc executedId = 2, send rpc request start......
My role = 0, Id = 1, term = 1, get heartbeat from leader = 4
My role = 0, Id = 1, args.Term = 1, rf.currentTerm = 1
My role = 0, Id = 1, term = 1, AppendEntries true
My role = 0, Id = 1, term = 1, AppendEntries, len(rf.log) > PrevLogIndex
My role = 0, Id = 1, term = 1, AppendEntries, rf.log[args.PrevLogIndex].Term == args.PrevLogTerm, reply.Success = true
My role = 0, Id = 1, term = 1, AppendEntries, log[0].Entry = 
My role = 0, Id = 1, term = 1, AppendEntries, log[1].Entry = 100
My role = 0, Id = 1, term = 1, AppendEntries, log[2].Entry = 200
My role = 0, Id = 1, term = 1, send heartbeatChan start
My role = 0, Id = 1, term = 1, send heartbeatChan end
follower = 1, get channel rf.rpcState
follower = 1, term = 1, isApplyMsg = true
My role = 0, Id = 2, term = 1, get heartbeat from leader = 4
My role = 0, Id = 2, args.Term = 1, rf.currentTerm = 1
My role = 0, Id = 2, term = 1, AppendEntries true
My role = 0, Id = 2, term = 1, AppendEntries, len(rf.log) > PrevLogIndex
My role = 0, Id = 2, term = 1, AppendEntries, rf.log[args.PrevLogIndex].Term == args.PrevLogTerm, reply.Success = true
follower = 1, term = 1, timeout = 862
follower = 1, term = 1, running.........
My role = 0, Id = 2, term = 1, AppendEntries, log[0].Entry = 
My role = 0, Id = 2, term = 1, AppendEntries, log[1].Entry = 100
My role = 0, Id = 2, term = 1, AppendEntries, log[2].Entry = 200
My role = 0, Id = 2, term = 1, send heartbeatChan start
My role = 0, Id = 2, term = 1, send heartbeatChan end
leader = 4, term = 1, rpc executedId = 1, send rpc request end, result = true......
leader = 4, term = 1, rpc executedId = 1, rpcChan has not been closed
leader = 4, term = 1, rpc executedId = 1, rpcChan sned
leader = 4, term = 1, rpc executedId = 1, rpcChan end
leader = 4, term = 1, rpc executedId = 1, rpcReplyChan sned
follower = 1, term = 1, applyChan send
follower = 1, term = 1, applyChan send end
leader = 4, term = 1, rpc executedId = 1, rpcReplyChan sned over
i = 0, index = 2, cmd1 = 200, ok = true
i = 1, index = 2, cmd1 = 200, ok = true
i = 2, index = 2, cmd1 = 0, ok = false
i = 3, index = 2, cmd1 = 200, ok = true
i = 4, index = 2, cmd1 = 0, ok = false
follower = 2, get channel rf.rpcState
follower = 2, term = 1, isApplyMsg = true
leader = 4, term = 1, follower = 1, rpc succeed
leader = 4, term = 1, isServerAllTrue = true, ValidServerCount = 5, rpcSucceedCount = 5
leader = 4, term = 1, ValidServerCount = 5, rpcSucceedCount = 5, a heartbeat round is end
follower = 2, term = 1, applyChan send
follower = 2, term = 1, applyChan send end
follower = 2, term = 1, timeout = 989
There is quorum
leader = 4, term = 1, isHeartbeat = false
leader = 4, term = 1, majority server has duplicated, commitIndex = 2, exit appendEntries
leader = 4, term = 1, heartbeat operation end, reset the leaderTimer
leader = 4, term = 1, stage of leader end
leader = 4, term = 1, start a heartbeatTimer
follower = 2, term = 1, running.........
leader = 4, term = 1, rpc executedId = 2, send rpc request end, result = true......
leader = 4, term = 1, rpc executedId = 2, rpcChan has not been closed
leader = 4, term = 1,len(rf.log) = 3, commitIndex = 2, send applyMsg
leader = 4, term = 1,len(rf.log) = 3, commitIndex = 2, send applyMsg end
leader = 4, term = 1, rpc executedId = 2, rpcChan sned
leader = 4, term = 1, rpc executedId = 2, rpcChan end
leader = 4, term = 1, rpc executedId = 2, rpcReplyChan sned
i = 0, index = 2, cmd1 = 200, ok = true
i = 1, index = 2, cmd1 = 200, ok = true
i = 2, index = 2, cmd1 = 200, ok = true
i = 3, index = 2, cmd1 = 200, ok = true
i = 4, index = 2, cmd1 = 200, ok = true
i = 0, index = 3, cmd1 = 0, ok = false
i = 1, index = 3, cmd1 = 0, ok = false
i = 2, index = 3, cmd1 = 0, ok = false
i = 3, index = 3, cmd1 = 0, ok = false
i = 4, index = 3, cmd1 = 0, ok = false
cfg.one, cmd = 300, server = 5
My role = 0, my Id = 1, term = 1, Start a command = 300
My role = 0, my Id = 1, term = 1, I am not a leader, return false
My role = 0, my Id = 1, term = 1, index = -1, term = -1, isLeader = false, Start a command = 300 end
My role = 0, my Id = 2, term = 1, Start a command = 300
My role = 0, my Id = 2, term = 1, I am not a leader, return false
My role = 0, my Id = 2, term = 1, index = -1, term = -1, isLeader = false, Start a command = 300 end
My role = 0, my Id = 3, term = 1, Start a command = 300
My role = 0, my Id = 3, term = 1, I am not a leader, return false
My role = 0, my Id = 3, term = 1, index = -1, term = -1, isLeader = false, Start a command = 300 end
My role = 2, my Id = 4, term = 1, Start a command = 300
My role = 2, my Id = 4, term = 1, I am leader
server = 0, nextIndex[0] = 4
server = 1, nextIndex[1] = 4
server = 2, nextIndex[2] = 4
server = 3, nextIndex[3] = 4
server = 4, nextIndex[4] = 4
My role = 2, my Id = 4, term = 1, rf.log[0].Term = 0, rf.log[0].Entry = 
My role = 2, my Id = 4, term = 1, rf.log[1].Term = 1, rf.log[1].Entry = 100
My role = 2, my Id = 4, term = 1, rf.log[2].Term = 1, rf.log[2].Entry = 200
My role = 2, my Id = 4, term = 1, rf.log[3].Term = 1, rf.log[3].Entry = 300
My role = 2, my Id = 4, term = 1, index = 3, term = 1, isLeader = true, Start a command = 300 end
Found leader, index = 3
i = 0, index = 3, cmd1 = 0, ok = false
i = 1, index = 3, cmd1 = 0, ok = false
i = 2, index = 3, cmd1 = 0, ok = false
i = 3, index = 3, cmd1 = 0, ok = false
i = 4, index = 3, cmd1 = 0, ok = false
i = 0, index = 3, cmd1 = 0, ok = false
i = 1, index = 3, cmd1 = 0, ok = false
i = 2, index = 3, cmd1 = 0, ok = false
i = 3, index = 3, cmd1 = 0, ok = false
i = 4, index = 3, cmd1 = 0, ok = false
i = 0, index = 3, cmd1 = 0, ok = false
i = 1, index = 3, cmd1 = 0, ok = false
i = 2, index = 3, cmd1 = 0, ok = false
i = 3, index = 3, cmd1 = 0, ok = false
i = 4, index = 3, cmd1 = 0, ok = false
i = 0, index = 3, cmd1 = 0, ok = false
i = 1, index = 3, cmd1 = 0, ok = false
i = 2, index = 3, cmd1 = 0, ok = false
i = 3, index = 3, cmd1 = 0, ok = false
i = 4, index = 3, cmd1 = 0, ok = false
leader = 4, term = 1, heartbeat timerout
leader = 4, term = 1, rf.nextIndex[0] = 4
leader = 4, term = 1, len(rf.log) = 4
leader = 4, term = 1, entries[0] = {300 1}
leader = 4, rpc executedId = 0, term = 1, set rpcTimeout = 500
leader = 4, term = 1, rpc executedId = 0, send rpc request start......
leader = 4, term = 1, rf.nextIndex[1] = 4
leader = 4, term = 1, len(rf.log) = 4
leader = 4, term = 1, entries[0] = {300 1}
leader = 4, term = 1, rf.nextIndex[2] = 4
leader = 4, term = 1, len(rf.log) = 4
leader = 4, term = 1, entries[0] = {300 1}
leader = 4, term = 1, rf.nextIndex[3] = 4
leader = 4, term = 1, len(rf.log) = 4
leader = 4, term = 1, entries[0] = {300 1}
leader = 4, rpc executedId = 1, term = 1, set rpcTimeout = 500
leader = 4, term = 1, rpc executedId = 1, send rpc request start......
leader = 4, rpc executedId = 3, term = 1, set rpcTimeout = 500
leader = 4, term = 1, rpc executedId = 3, send rpc request start......
My role = 0, Id = 0, term = 1, get heartbeat from leader = 4
My role = 0, Id = 0, args.Term = 1, rf.currentTerm = 1
My role = 0, Id = 0, term = 1, AppendEntries true
My role = 0, Id = 0, term = 1, AppendEntries, len(rf.log) = PrevLogIndex
My role = 0, Id = 0, term = 1, AppendEntries, len(rf.log) = PrevLogIndex, len(rf.log) != 1, success = false
My role = 0, Id = 0, term = 1, send heartbeatChan start
My role = 0, Id = 0, term = 1, send heartbeatChan end
leader = 4, term = 1, rpc executedId = 0, send rpc request end, result = true......
leader = 4, term = 1, rpc executedId = 0, rpcChan has not been closed
leader = 4, term = 1, rpc executedId = 0, rpcChan sned
leader = 4, term = 1, rpc executedId = 0, rpcChan end
leader = 4, term = 1, rpc executedId = 0, rpcReplyChan sned
My role = 0, Id = 1, term = 1, get heartbeat from leader = 4
My role = 0, Id = 1, args.Term = 1, rf.currentTerm = 1
My role = 0, Id = 1, term = 1, AppendEntries true
leader = 4, term = 1, rpc executedId = 0, rpcReplyChan sned over
My role = 0, Id = 1, term = 1, AppendEntries, len(rf.log) = PrevLogIndex
My role = 0, Id = 1, term = 1, AppendEntries, len(rf.log) = PrevLogIndex, len(rf.log) != 1, success = false
My role = 0, Id = 1, term = 1, send heartbeatChan start
My role = 0, Id = 3, term = 1, get heartbeat from leader = 4
i = 0, index = 3, cmd1 = 0, ok = false
i = 1, index = 3, cmd1 = 0, ok = false
i = 2, index = 3, cmd1 = 0, ok = false
i = 3, index = 3, cmd1 = 0, ok = false
i = 4, index = 3, cmd1 = 0, ok = false
My role = 0, Id = 3, args.Term = 1, rf.currentTerm = 1
My role = 0, Id = 3, term = 1, AppendEntries true
My role = 0, Id = 3, term = 1, AppendEntries, len(rf.log) = PrevLogIndex
My role = 0, Id = 3, term = 1, AppendEntries, len(rf.log) = PrevLogIndex, len(rf.log) != 1, success = false
My role = 0, Id = 3, term = 1, send heartbeatChan start
follower = 1, get channel rf.rpcState
My role = 0, Id = 1, term = 1, send heartbeatChan end
follower = 0, get channel rf.rpcState
leader = 4, rpc executedId = 2, term = 1, set rpcTimeout = 500
follower = 1, term = 1, timeout = 878
follower = 3, get channel rf.rpcState
My role = 0, Id = 3, term = 1, send heartbeatChan end
follower = 0, term = 1, timeout = 836
follower = 0, term = 1, running.........
leader = 4, term = 1, rpc executedId = 2, send rpc request start......
leader = 4, term = 1, follower = 0, rpc succeed
appendEntries failure......
leader = 4, term = 1, rf.nextIndex[0] = 3
leader = 4, term = 1, len(rf.log) = 4
leader = 4, term = 1, entries[0] = {200 1}
leader = 4, term = 1, entries[1] = {300 1}
leader = 4, term = 1, rpc executedId = 1, send rpc request end, result = true......
leader = 4, term = 1, rpc executedId = 1, rpcChan has not been closed
leader = 4, term = 1, rpc executedId = 1, rpcChan sned
leader = 4, term = 1, rpc executedId = 1, rpcChan end
leader = 4, term = 1, rpc executedId = 1, rpcReplyChan sned
leader = 4, term = 1, follower = 1, rpc succeed
appendEntries failure......
leader = 4, term = 1, rf.nextIndex[1] = 3
leader = 4, term = 1, len(rf.log) = 4
follower = 3, term = 1, timeout = 996
follower = 3, term = 1, running.........
leader = 4, term = 1, rpc executedId = 1, rpcReplyChan sned over
leader = 4, rpc executedId = 0, term = 1, set rpcTimeout = 500
leader = 4, term = 1, rpc executedId = 3, send rpc request end, result = true......
leader = 4, term = 1, rpc executedId = 3, rpcChan has not been closed
leader = 4, term = 1, entries[0] = {200 1}
leader = 4, term = 1, entries[1] = {300 1}
follower = 1, term = 1, running.........
leader = 4, term = 1, rpc executedId = 0, send rpc request start......
leader = 4, term = 1, rpc executedId = 3, rpcChan sned
leader = 4, term = 1, rpc executedId = 3, rpcChan end
leader = 4, term = 1, rpc executedId = 3, rpcReplyChan sned
My role = 0, Id = 2, term = 1, get heartbeat from leader = 4
leader = 4, term = 1, rpc executedId = 3, rpcReplyChan sned over
My role = 0, Id = 2, args.Term = 1, rf.currentTerm = 1
My role = 0, Id = 2, term = 1, AppendEntries true
My role = 0, Id = 2, term = 1, AppendEntries, len(rf.log) = PrevLogIndex
leader = 4, term = 1, follower = 3, rpc succeed
appendEntries failure......
leader = 4, term = 1, rf.nextIndex[3] = 3
leader = 4, term = 1, len(rf.log) = 4
leader = 4, term = 1, entries[0] = {200 1}
leader = 4, term = 1, entries[1] = {300 1}
My role = 0, Id = 2, term = 1, AppendEntries, len(rf.log) = PrevLogIndex, len(rf.log) != 1, success = false
My role = 0, Id = 2, term = 1, send heartbeatChan start
My role = 0, Id = 2, term = 1, send heartbeatChan end
leader = 4, rpc executedId = 1, term = 1, set rpcTimeout = 500
leader = 4, term = 1, rpc executedId = 1, send rpc request start......
My role = 0, Id = 0, term = 1, get heartbeat from leader = 4
My role = 0, Id = 0, args.Term = 1, rf.currentTerm = 1
My role = 0, Id = 0, term = 1, AppendEntries true
My role = 0, Id = 0, term = 1, AppendEntries, len(rf.log) > PrevLogIndex
My role = 0, Id = 0, term = 1, AppendEntries, rf.log[args.PrevLogIndex].Term == args.PrevLogTerm, reply.Success = true
My role = 0, Id = 0, term = 1, AppendEntries, log[0].Entry = 
follower = 2, get channel rf.rpcState
follower = 2, term = 1, timeout = 918
follower = 2, term = 1, running.........
leader = 4, term = 1, rpc executedId = 2, send rpc request end, result = true......
leader = 4, term = 1, rpc executedId = 2, rpcChan has not been closed
leader = 4, term = 1, rpc executedId = 2, rpcChan sned
leader = 4, term = 1, rpc executedId = 2, rpcChan end
leader = 4, rpc executedId = 3, term = 1, set rpcTimeout = 500
leader = 4, term = 1, rpc executedId = 3, send rpc request start......
leader = 4, term = 1, rpc executedId = 2, rpcReplyChan sned
My role = 0, Id = 0, term = 1, AppendEntries, log[1].Entry = 100
My role = 0, Id = 0, term = 1, AppendEntries, log[2].Entry = 200
leader = 4, term = 1, follower = 2, rpc succeed
appendEntries failure......
leader = 4, term = 1, rf.nextIndex[2] = 3
leader = 4, term = 1, len(rf.log) = 4
leader = 4, term = 1, entries[0] = {200 1}
leader = 4, term = 1, entries[1] = {300 1}
leader = 4, term = 1, rpc executedId = 2, rpcReplyChan sned over
My role = 0, Id = 1, term = 1, get heartbeat from leader = 4
My role = 0, Id = 1, args.Term = 1, rf.currentTerm = 1
My role = 0, Id = 1, term = 1, AppendEntries true
My role = 0, Id = 1, term = 1, AppendEntries, len(rf.log) > PrevLogIndex
My role = 0, Id = 1, term = 1, AppendEntries, rf.log[args.PrevLogIndex].Term == args.PrevLogTerm, reply.Success = true
My role = 0, Id = 1, term = 1, AppendEntries, log[0].Entry = 
My role = 0, Id = 1, term = 1, AppendEntries, log[1].Entry = 100
My role = 0, Id = 1, term = 1, AppendEntries, log[2].Entry = 200
My role = 0, Id = 1, term = 1, AppendEntries, log[3].Entry = 300
My role = 0, Id = 1, term = 1, send heartbeatChan start
My role = 0, Id = 1, term = 1, send heartbeatChan end
leader = 4, rpc executedId = 2, term = 1, set rpcTimeout = 500
leader = 4, term = 1, rpc executedId = 2, send rpc request start......
My role = 0, Id = 3, term = 1, get heartbeat from leader = 4
My role = 0, Id = 3, args.Term = 1, rf.currentTerm = 1
My role = 0, Id = 3, term = 1, AppendEntries true
My role = 0, Id = 3, term = 1, AppendEntries, len(rf.log) > PrevLogIndex
My role = 0, Id = 3, term = 1, AppendEntries, rf.log[args.PrevLogIndex].Term == args.PrevLogTerm, reply.Success = true
My role = 0, Id = 3, term = 1, AppendEntries, log[0].Entry = 
My role = 0, Id = 3, term = 1, AppendEntries, log[1].Entry = 100
My role = 0, Id = 3, term = 1, AppendEntries, log[2].Entry = 200
My role = 0, Id = 3, term = 1, AppendEntries, log[3].Entry = 300
My role = 0, Id = 3, term = 1, send heartbeatChan start
My role = 0, Id = 3, term = 1, send heartbeatChan end
leader = 4, term = 1, rpc executedId = 1, send rpc request end, result = true......
leader = 4, term = 1, rpc executedId = 1, rpcChan has not been closed
leader = 4, term = 1, rpc executedId = 1, rpcChan sned
leader = 4, term = 1, rpc executedId = 1, rpcChan end
leader = 4, term = 1, rpc executedId = 1, rpcReplyChan sned
My role = 0, Id = 0, term = 1, AppendEntries, log[3].Entry = 300
My role = 0, Id = 0, term = 1, send heartbeatChan start
leader = 4, term = 1, follower = 1, rpc succeed
follower = 1, get channel rf.rpcState
follower = 1, term = 1, isApplyMsg = true
follower = 3, get channel rf.rpcState
follower = 3, term = 1, isApplyMsg = true
follower = 3, term = 1, applyChan send
follower = 3, term = 1, applyChan send end
My role = 0, Id = 0, term = 1, send heartbeatChan end
follower = 1, term = 1, timeout = 807
follower = 1, term = 1, running.........
leader = 4, term = 1, rpc executedId = 3, send rpc request end, result = true......
leader = 4, term = 1, rpc executedId = 3, rpcChan has not been closed
leader = 4, term = 1, rpc executedId = 3, rpcChan sned
follower = 3, term = 1, timeout = 915
leader = 4, term = 1, rpc executedId = 3, rpcChan end
follower = 1, term = 1, applyChan send
leader = 4, term = 1, rpc executedId = 1, rpcReplyChan sned over
leader = 4, term = 1, isServerAllTrue = true, ValidServerCount = 5, rpcSucceedCount = 6
leader = 4, term = 1, ValidServerCount = 5, rpcSucceedCount = 6, a heartbeat round is end
There is quorum
leader = 4, term = 1, less server has duplicated, start new appendEntries
leader = 4, term = 1, heartbeat operation end, reset the leaderTimer
leader = 4, term = 1, stage of leader end
leader = 4, term = 1, start a heartbeatTimer
My role = 0, Id = 2, term = 1, get heartbeat from leader = 4
My role = 0, Id = 2, args.Term = 1, rf.currentTerm = 1
My role = 0, Id = 2, term = 1, AppendEntries true
My role = 0, Id = 2, term = 1, AppendEntries, len(rf.log) > PrevLogIndex
leader = 4, term = 1, rpc executedId = 3, rpcReplyChan sned
My role = 0, Id = 2, term = 1, AppendEntries, rf.log[args.PrevLogIndex].Term == args.PrevLogTerm, reply.Success = true
My role = 0, Id = 2, term = 1, AppendEntries, log[0].Entry = 
My role = 0, Id = 2, term = 1, AppendEntries, log[1].Entry = 100
My role = 0, Id = 2, term = 1, AppendEntries, log[2].Entry = 200
My role = 0, Id = 2, term = 1, AppendEntries, log[3].Entry = 300
My role = 0, Id = 2, term = 1, send heartbeatChan start
My role = 0, Id = 2, term = 1, send heartbeatChan end
follower = 0, get channel rf.rpcState
follower = 0, term = 1, isApplyMsg = true
leader = 4, term = 1, rpc executedId = 0, send rpc request end, result = true......
leader = 4, term = 1, rpc executedId = 0, rpcChan has not been closed
leader = 4, term = 1, rpc executedId = 0, rpcChan sned
leader = 4, term = 1, rpc executedId = 0, rpcChan end
leader = 4, term = 1, rpc executedId = 0, rpcReplyChan sned
follower = 0, term = 1, applyChan send
follower = 0, term = 1, timeout = 892
follower = 0, term = 1, running.........
follower = 3, term = 1, running.........
follower = 2, get channel rf.rpcState
follower = 2, term = 1, isApplyMsg = true
follower = 2, term = 1, timeout = 830
follower = 1, term = 1, applyChan send end
follower = 2, term = 1, applyChan send
follower = 2, term = 1, applyChan send end
leader = 4, term = 1, rpc executedId = 2, send rpc request end, result = true......
leader = 4, term = 1, rpc executedId = 2, rpcChan has not been closed
follower = 0, term = 1, applyChan send end
leader = 4, term = 1, rpc executedId = 2, rpcChan sned
leader = 4, term = 1, rpc executedId = 2, rpcChan end
follower = 2, term = 1, running.........
leader = 4, term = 1, rpc executedId = 2, rpcReplyChan sned
i = 0, index = 3, cmd1 = 300, ok = true
i = 1, index = 3, cmd1 = 300, ok = true
i = 2, index = 3, cmd1 = 300, ok = true
i = 3, index = 3, cmd1 = 300, ok = true
i = 4, index = 3, cmd1 = 0, ok = false
i = 0, index = 3, cmd1 = 300, ok = true
i = 1, index = 3, cmd1 = 300, ok = true
i = 2, index = 3, cmd1 = 300, ok = true
i = 3, index = 3, cmd1 = 300, ok = true
i = 4, index = 3, cmd1 = 0, ok = false
i = 0, index = 3, cmd1 = 300, ok = true
i = 1, index = 3, cmd1 = 300, ok = true
i = 2, index = 3, cmd1 = 300, ok = true
i = 3, index = 3, cmd1 = 300, ok = true
i = 4, index = 3, cmd1 = 0, ok = false
i = 0, index = 3, cmd1 = 300, ok = true
i = 1, index = 3, cmd1 = 300, ok = true
i = 2, index = 3, cmd1 = 300, ok = true
i = 3, index = 3, cmd1 = 300, ok = true
i = 4, index = 3, cmd1 = 0, ok = false
i = 0, index = 3, cmd1 = 300, ok = true
i = 1, index = 3, cmd1 = 300, ok = true
i = 2, index = 3, cmd1 = 300, ok = true
i = 3, index = 3, cmd1 = 300, ok = true
i = 4, index = 3, cmd1 = 0, ok = false
leader = 4, term = 1, heartbeat timerout
leader = 4, term = 1, rf.nextIndex[0] = 3
leader = 4, term = 1, len(rf.log) = 4
leader = 4, term = 1, entries[0] = {200 1}
leader = 4, term = 1, entries[1] = {300 1}
leader = 4, term = 1, rf.nextIndex[1] = 4
leader = 4, term = 1, len(rf.log) = 4
leader = 4, term = 1, entries[0] = {300 1}
leader = 4, term = 1, rf.nextIndex[2] = 3
leader = 4, term = 1, len(rf.log) = 4
leader = 4, term = 1, entries[0] = {200 1}
leader = 4, term = 1, entries[1] = {300 1}
leader = 4, term = 1, rf.nextIndex[3] = 3
leader = 4, term = 1, len(rf.log) = 4
leader = 4, term = 1, entries[0] = {200 1}
leader = 4, term = 1, entries[1] = {300 1}
leader = 4, rpc executedId = 0, term = 1, set rpcTimeout = 500
leader = 4, rpc executedId = 1, term = 1, set rpcTimeout = 500
leader = 4, term = 1, rpc executedId = 1, send rpc request start......
leader = 4, rpc executedId = 3, term = 1, set rpcTimeout = 500
leader = 4, term = 1, rpc executedId = 3, send rpc request start......
leader = 4, term = 1, rpc executedId = 0, send rpc request start......
My role = 0, Id = 3, term = 1, get heartbeat from leader = 4
My role = 0, Id = 3, args.Term = 1, rf.currentTerm = 1
My role = 0, Id = 3, term = 1, AppendEntries true
My role = 0, Id = 3, term = 1, AppendEntries, len(rf.log) > PrevLogIndex
My role = 0, Id = 3, term = 1, AppendEntries, rf.log[args.PrevLogIndex].Term == args.PrevLogTerm, reply.Success = true
My role = 0, Id = 3, term = 1, AppendEntries, log[0].Entry = 
My role = 0, Id = 3, term = 1, AppendEntries, log[1].Entry = 100
My role = 0, Id = 3, term = 1, AppendEntries, log[2].Entry = 200
My role = 0, Id = 3, term = 1, AppendEntries, log[3].Entry = 300
My role = 0, Id = 3, term = 1, send heartbeatChan start
My role = 0, Id = 3, term = 1, send heartbeatChan end
leader = 4, rpc executedId = 2, term = 1, set rpcTimeout = 500
My role = 0, Id = 0, term = 1, get heartbeat from leader = 4
My role = 0, Id = 0, args.Term = 1, rf.currentTerm = 1
My role = 0, Id = 0, term = 1, AppendEntries true
My role = 0, Id = 0, term = 1, AppendEntries, len(rf.log) > PrevLogIndex
My role = 0, Id = 0, term = 1, AppendEntries, rf.log[args.PrevLogIndex].Term == args.PrevLogTerm, reply.Success = true
My role = 0, Id = 0, term = 1, AppendEntries, log[0].Entry = 
My role = 0, Id = 0, term = 1, AppendEntries, log[1].Entry = 100
My role = 0, Id = 0, term = 1, AppendEntries, log[2].Entry = 200
My role = 0, Id = 0, term = 1, AppendEntries, log[3].Entry = 300
My role = 0, Id = 0, term = 1, send heartbeatChan start
My role = 0, Id = 0, term = 1, send heartbeatChan end
leader = 4, term = 1, rpc executedId = 3, send rpc request end, result = true......
leader = 4, term = 1, rpc executedId = 3, rpcChan has not been closed
follower = 0, get channel rf.rpcState
follower = 0, term = 1, isApplyMsg = true
follower = 0, term = 1, timeout = 947
follower = 0, term = 1, running.........
My role = 0, Id = 1, term = 1, get heartbeat from leader = 4
follower = 3, get channel rf.rpcState
follower = 3, term = 1, isApplyMsg = true
leader = 4, term = 1, rpc executedId = 0, send rpc request end, result = true......
follower = 3, term = 1, timeout = 892
follower = 3, term = 1, running.........
leader = 4, term = 1, rpc executedId = 3, rpcChan sned
leader = 4, term = 1, rpc executedId = 3, rpcChan end
My role = 0, Id = 1, args.Term = 1, rf.currentTerm = 1
My role = 0, Id = 1, term = 1, AppendEntries true
My role = 0, Id = 1, term = 1, AppendEntries, len(rf.log) > PrevLogIndex
My role = 0, Id = 1, term = 1, AppendEntries, rf.log[args.PrevLogIndex].Term == args.PrevLogTerm, reply.Success = true
My role = 0, Id = 1, term = 1, AppendEntries, log[0].Entry = 
My role = 0, Id = 1, term = 1, AppendEntries, log[1].Entry = 100
My role = 0, Id = 1, term = 1, AppendEntries, log[2].Entry = 200
My role = 0, Id = 1, term = 1, AppendEntries, log[3].Entry = 300
My role = 0, Id = 1, term = 1, send heartbeatChan start
leader = 4, term = 1, rpc executedId = 3, rpcReplyChan sned
leader = 4, term = 1, rpc executedId = 2, send rpc request start......
leader = 4, term = 1, follower = 3, rpc succeed
leader = 4, term = 1, isServerAllTrue = true, ValidServerCount = 5, rpcSucceedCount = 2
leader = 4, term = 1, rpc executedId = 3, rpcReplyChan sned over
follower = 0, term = 1, applyChan send
follower = 0, term = 1, applyChan send end
My role = 0, Id = 1, term = 1, send heartbeatChan end
follower = 3, term = 1, applyChan send
follower = 3, term = 1, applyChan send end
follower = 1, get channel rf.rpcState
follower = 1, term = 1, isApplyMsg = true
follower = 1, term = 1, timeout = 817
follower = 1, term = 1, running.........
follower = 1, term = 1, applyChan send
follower = 1, term = 1, applyChan send end
leader = 4, term = 1, rpc executedId = 1, send rpc request end, result = true......
leader = 4, term = 1, rpc executedId = 1, rpcChan has not been closed
leader = 4, term = 1, rpc executedId = 1, rpcChan sned
leader = 4, term = 1, rpc executedId = 1, rpcChan end
leader = 4, term = 1, rpc executedId = 0, rpcChan has not been closed
My role = 0, Id = 2, term = 1, get heartbeat from leader = 4
My role = 0, Id = 2, args.Term = 1, rf.currentTerm = 1
My role = 0, Id = 2, term = 1, AppendEntries true
My role = 0, Id = 2, term = 1, AppendEntries, len(rf.log) > PrevLogIndex
My role = 0, Id = 2, term = 1, AppendEntries, rf.log[args.PrevLogIndex].Term == args.PrevLogTerm, reply.Success = true
My role = 0, Id = 2, term = 1, AppendEntries, log[0].Entry = 
My role = 0, Id = 2, term = 1, AppendEntries, log[1].Entry = 100
My role = 0, Id = 2, term = 1, AppendEntries, log[2].Entry = 200
My role = 0, Id = 2, term = 1, AppendEntries, log[3].Entry = 300
My role = 0, Id = 2, term = 1, send heartbeatChan start
My role = 0, Id = 2, term = 1, send heartbeatChan end
leader = 4, term = 1, rpc executedId = 0, rpcChan sned
leader = 4, term = 1, rpc executedId = 1, rpcReplyChan sned
follower = 2, get channel rf.rpcState
leader = 4, term = 1, follower = 1, rpc succeed
leader = 4, term = 1, isServerAllTrue = true, ValidServerCount = 5, rpcSucceedCount = 3
leader = 4, term = 1, rpc executedId = 0, rpcChan end
leader = 4, term = 1, rpc executedId = 0, rpcReplyChan sned
leader = 4, term = 1, rpc executedId = 1, rpcReplyChan sned over
follower = 2, term = 1, isApplyMsg = true
leader = 4, term = 1, follower = 0, rpc succeed
leader = 4, term = 1, isServerAllTrue = true, ValidServerCount = 5, rpcSucceedCount = 4
follower = 2, term = 1, timeout = 888
follower = 2, term = 1, running.........
follower = 2, term = 1, applyChan send
follower = 2, term = 1, applyChan send end
leader = 4, term = 1, rpc executedId = 2, send rpc request end, result = true......
leader = 4, term = 1, rpc executedId = 2, rpcChan has not been closed
leader = 4, term = 1, rpc executedId = 2, rpcChan sned
leader = 4, term = 1, rpc executedId = 0, rpcReplyChan sned over
leader = 4, term = 1, rpc executedId = 2, rpcChan end
leader = 4, term = 1, rpc executedId = 2, rpcReplyChan sned
leader = 4, term = 1, follower = 2, rpc succeed
leader = 4, term = 1, isServerAllTrue = true, ValidServerCount = 5, rpcSucceedCount = 5
leader = 4, term = 1, ValidServerCount = 5, rpcSucceedCount = 5, a heartbeat round is end
There is quorum
leader = 4, term = 1, isHeartbeat = false
leader = 4, term = 1, majority server has duplicated, commitIndex = 3, exit appendEntries
leader = 4, term = 1, heartbeat operation end, reset the leaderTimer
leader = 4, term = 1, stage of leader end
leader = 4, term = 1, start a heartbeatTimer
leader = 4, term = 1, rpc executedId = 2, rpcReplyChan sned over
leader = 4, term = 1,len(rf.log) = 4, commitIndex = 3, send applyMsg
leader = 4, term = 1,len(rf.log) = 4, commitIndex = 3, send applyMsg end
i = 0, index = 3, cmd1 = 300, ok = true
i = 1, index = 3, cmd1 = 300, ok = true
i = 2, index = 3, cmd1 = 300, ok = true
i = 3, index = 3, cmd1 = 300, ok = true
i = 4, index = 3, cmd1 = 300, ok = true
TestBasicAgree2B end
  ... Passed --   1.3  5   32    3
My role = 0, my Id = 0, term = 1, will be killed now
My role = 0, my Id = 0, term = 1, has been killed
My role = 0, my Id = 1, term = 1, will be killed now
My role = 0, my Id = 1, term = 1, has been killed
My role = 0, my Id = 2, term = 1, will be killed now
My role = 0, my Id = 2, term = 1, has been killed
My role = 0, my Id = 3, term = 1, will be killed now
My role = 0, my Id = 3, term = 1, has been killed
My role = 2, my Id = 4, term = 1, will be killed now
My role = 0, my Id = 2, term = 1, send exitChan
My role = 0, my Id = 2, term = 1, send exitChan over
My role = 2, my Id = 4, term = 1, has been killed
My role = 0, my Id = 1, term = 1, send exitChan
My role = 0, my Id = 0, term = 1, send exitChan
My role = 0, my Id = 0, term = 1, send exitChan over
follower = 2, term = 1, get channel rf.exitChan, break ExitServer
My role = 0, my Id = 3, term = 1, send exitChan
disconnect(0)
follower = 0, term = 1, get channel rf.exitChan, break ExitServer
My role = 0, my Id = 3, term = 1, send exitChan over
follower = 3, term = 1, get channel rf.exitChan, break ExitServer
My role = 2, my Id = 4, term = 1, send exitChan
My role = 2, my Id = 4, term = 1, send exitChan over
leader = 4, term = 1, get channel rf.exitChan, break ExitServer
server = 0, nextIndex[0] = 1
server = 1, nextIndex[1] = 1
server = 2, nextIndex[2] = 1
me = 0
server handler
create goroutine, program continue
follower = 1, term = 1, get channel rf.exitChan, break ExitServer
Follower = 0, term = 0, stage start......
follower = 0, term = 0, timeout = 862
follower = 0, term = 0, running.........
disconnect(1)
My role = 0, my Id = 1, term = 1, send exitChan over
server = 0, nextIndex[0] = 1
server = 1, nextIndex[1] = 1
server = 2, nextIndex[2] = 1
me = 1
server handler
create goroutine, program continue
disconnect(2)
Follower = 1, term = 0, stage start......
follower = 1, term = 0, timeout = 837
follower = 1, term = 0, running.........
server = 0, nextIndex[0] = 1
server = 1, nextIndex[1] = 1
server = 2, nextIndex[2] = 1
me = 2
server handler
create goroutine, program continue
connect(0)
connect(1)
connect(2)
Test (2B): agreement despite follower disconnection ...
My role = 0, my Id = 1, term = 0, Start a command = 101
My role = 0, my Id = 1, term = 0, I am not a leader, return false
My role = 0, my Id = 1, term = 0, index = -1, term = -1, isLeader = false, Start a command = 101 end
My role = 0, my Id = 2, term = 0, Start a command = 101
My role = 0, my Id = 2, term = 0, I am not a leader, return false
My role = 0, my Id = 2, term = 0, index = -1, term = -1, isLeader = false, Start a command = 101 end
My role = 0, my Id = 0, term = 0, Start a command = 101
My role = 0, my Id = 0, term = 0, I am not a leader, return false
Follower = 2, term = 0, stage start......
follower = 2, term = 0, timeout = 875
follower = 2, term = 0, running.........
My role = 0, my Id = 0, term = 0, index = -1, term = -1, isLeader = false, Start a command = 101 end
My role = 0, my Id = 1, term = 0, Start a command = 101
My role = 0, my Id = 1, term = 0, I am not a leader, return false
My role = 0, my Id = 1, term = 0, index = -1, term = -1, isLeader = false, Start a command = 101 end
My role = 0, my Id = 2, term = 0, Start a command = 101
My role = 0, my Id = 2, term = 0, I am not a leader, return false
My role = 0, my Id = 2, term = 0, index = -1, term = -1, isLeader = false, Start a command = 101 end
My role = 0, my Id = 0, term = 0, Start a command = 101
My role = 0, my Id = 0, term = 0, I am not a leader, return false
My role = 0, my Id = 0, term = 0, index = -1, term = -1, isLeader = false, Start a command = 101 end
My role = 0, my Id = 1, term = 0, Start a command = 101
My role = 0, my Id = 1, term = 0, I am not a leader, return false
My role = 0, my Id = 1, term = 0, index = -1, term = -1, isLeader = false, Start a command = 101 end
My role = 0, my Id = 2, term = 0, Start a command = 101
My role = 0, my Id = 2, term = 0, I am not a leader, return false
My role = 0, my Id = 2, term = 0, index = -1, term = -1, isLeader = false, Start a command = 101 end
My role = 0, my Id = 0, term = 0, Start a command = 101
My role = 0, my Id = 0, term = 0, I am not a leader, return false
My role = 0, my Id = 0, term = 0, index = -1, term = -1, isLeader = false, Start a command = 101 end
My role = 0, my Id = 1, term = 0, Start a command = 101
My role = 0, my Id = 1, term = 0, I am not a leader, return false
My role = 0, my Id = 1, term = 0, index = -1, term = -1, isLeader = false, Start a command = 101 end
My role = 0, my Id = 2, term = 0, Start a command = 101
My role = 0, my Id = 2, term = 0, I am not a leader, return false
My role = 0, my Id = 2, term = 0, index = -1, term = -1, isLeader = false, Start a command = 101 end
My role = 0, my Id = 0, term = 0, Start a command = 101
My role = 0, my Id = 0, term = 0, I am not a leader, return false
My role = 0, my Id = 0, term = 0, index = -1, term = -1, isLeader = false, Start a command = 101 end
My role = 0, my Id = 1, term = 0, Start a command = 101
My role = 0, my Id = 1, term = 0, I am not a leader, return false
My role = 0, my Id = 1, term = 0, index = -1, term = -1, isLeader = false, Start a command = 101 end
My role = 0, my Id = 2, term = 0, Start a command = 101
My role = 0, my Id = 2, term = 0, I am not a leader, return false
My role = 0, my Id = 2, term = 0, index = -1, term = -1, isLeader = false, Start a command = 101 end
My role = 0, my Id = 0, term = 0, Start a command = 101
My role = 0, my Id = 0, term = 0, I am not a leader, return false
My role = 0, my Id = 0, term = 0, index = -1, term = -1, isLeader = false, Start a command = 101 end
My role = 0, my Id = 1, term = 0, Start a command = 101
My role = 0, my Id = 1, term = 0, I am not a leader, return false
My role = 0, my Id = 1, term = 0, index = -1, term = -1, isLeader = false, Start a command = 101 end
My role = 0, my Id = 2, term = 0, Start a command = 101
My role = 0, my Id = 2, term = 0, I am not a leader, return false
My role = 0, my Id = 2, term = 0, index = -1, term = -1, isLeader = false, Start a command = 101 end
My role = 0, my Id = 0, term = 0, Start a command = 101
My role = 0, my Id = 0, term = 0, I am not a leader, return false
My role = 0, my Id = 0, term = 0, index = -1, term = -1, isLeader = false, Start a command = 101 end
My role = 0, my Id = 1, term = 0, Start a command = 101
My role = 0, my Id = 1, term = 0, I am not a leader, return false
My role = 0, my Id = 1, term = 0, index = -1, term = -1, isLeader = false, Start a command = 101 end
My role = 0, my Id = 2, term = 0, Start a command = 101
My role = 0, my Id = 2, term = 0, I am not a leader, return false
My role = 0, my Id = 2, term = 0, index = -1, term = -1, isLeader = false, Start a command = 101 end
My role = 0, my Id = 0, term = 0, Start a command = 101
My role = 0, my Id = 0, term = 0, I am not a leader, return false
My role = 0, my Id = 0, term = 0, index = -1, term = -1, isLeader = false, Start a command = 101 end
My role = 0, my Id = 1, term = 0, Start a command = 101
My role = 0, my Id = 1, term = 0, I am not a leader, return false
My role = 0, my Id = 1, term = 0, index = -1, term = -1, isLeader = false, Start a command = 101 end
My role = 0, my Id = 2, term = 0, Start a command = 101
My role = 0, my Id = 2, term = 0, I am not a leader, return false
My role = 0, my Id = 2, term = 0, index = -1, term = -1, isLeader = false, Start a command = 101 end
My role = 0, my Id = 0, term = 0, Start a command = 101
My role = 0, my Id = 0, term = 0, I am not a leader, return false
My role = 0, my Id = 0, term = 0, index = -1, term = -1, isLeader = false, Start a command = 101 end
My role = 0, my Id = 1, term = 0, Start a command = 101
My role = 0, my Id = 1, term = 0, I am not a leader, return false
My role = 0, my Id = 1, term = 0, index = -1, term = -1, isLeader = false, Start a command = 101 end
My role = 0, my Id = 2, term = 0, Start a command = 101
My role = 0, my Id = 2, term = 0, I am not a leader, return false
My role = 0, my Id = 2, term = 0, index = -1, term = -1, isLeader = false, Start a command = 101 end
My role = 0, my Id = 0, term = 0, Start a command = 101
My role = 0, my Id = 0, term = 0, I am not a leader, return false
My role = 0, my Id = 0, term = 0, index = -1, term = -1, isLeader = false, Start a command = 101 end
My role = 0, my Id = 1, term = 0, Start a command = 101
My role = 0, my Id = 1, term = 0, I am not a leader, return false
My role = 0, my Id = 1, term = 0, index = -1, term = -1, isLeader = false, Start a command = 101 end
My role = 0, my Id = 2, term = 0, Start a command = 101
My role = 0, my Id = 2, term = 0, I am not a leader, return false
My role = 0, my Id = 2, term = 0, index = -1, term = -1, isLeader = false, Start a command = 101 end
My role = 0, my Id = 0, term = 0, Start a command = 101
My role = 0, my Id = 0, term = 0, I am not a leader, return false
My role = 0, my Id = 0, term = 0, index = -1, term = -1, isLeader = false, Start a command = 101 end
My role = 0, my Id = 1, term = 0, Start a command = 101
My role = 0, my Id = 1, term = 0, I am not a leader, return false
My role = 0, my Id = 1, term = 0, index = -1, term = -1, isLeader = false, Start a command = 101 end
My role = 0, my Id = 2, term = 0, Start a command = 101
My role = 0, my Id = 2, term = 0, I am not a leader, return false
My role = 0, my Id = 2, term = 0, index = -1, term = -1, isLeader = false, Start a command = 101 end
My role = 0, my Id = 0, term = 0, Start a command = 101
My role = 0, my Id = 0, term = 0, I am not a leader, return false
My role = 0, my Id = 0, term = 0, index = -1, term = -1, isLeader = false, Start a command = 101 end
My role = 0, my Id = 1, term = 0, Start a command = 101
My role = 0, my Id = 1, term = 0, I am not a leader, return false
My role = 0, my Id = 1, term = 0, index = -1, term = -1, isLeader = false, Start a command = 101 end
My role = 0, my Id = 2, term = 0, Start a command = 101
My role = 0, my Id = 2, term = 0, I am not a leader, return false
My role = 0, my Id = 2, term = 0, index = -1, term = -1, isLeader = false, Start a command = 101 end
My role = 0, my Id = 0, term = 0, Start a command = 101
My role = 0, my Id = 0, term = 0, I am not a leader, return false
My role = 0, my Id = 0, term = 0, index = -1, term = -1, isLeader = false, Start a command = 101 end
My role = 0, my Id = 1, term = 0, Start a command = 101
My role = 0, my Id = 1, term = 0, I am not a leader, return false
My role = 0, my Id = 1, term = 0, index = -1, term = -1, isLeader = false, Start a command = 101 end
My role = 0, my Id = 2, term = 0, Start a command = 101
My role = 0, my Id = 2, term = 0, I am not a leader, return false
My role = 0, my Id = 2, term = 0, index = -1, term = -1, isLeader = false, Start a command = 101 end
My role = 0, my Id = 0, term = 0, Start a command = 101
My role = 0, my Id = 0, term = 0, I am not a leader, return false
My role = 0, my Id = 0, term = 0, index = -1, term = -1, isLeader = false, Start a command = 101 end
My role = 0, my Id = 1, term = 0, Start a command = 101
My role = 0, my Id = 1, term = 0, I am not a leader, return false
My role = 0, my Id = 1, term = 0, index = -1, term = -1, isLeader = false, Start a command = 101 end
My role = 0, my Id = 2, term = 0, Start a command = 101
My role = 0, my Id = 2, term = 0, I am not a leader, return false
My role = 0, my Id = 2, term = 0, index = -1, term = -1, isLeader = false, Start a command = 101 end
My role = 0, my Id = 0, term = 0, Start a command = 101
My role = 0, my Id = 0, term = 0, I am not a leader, return false
My role = 0, my Id = 0, term = 0, index = -1, term = -1, isLeader = false, Start a command = 101 end
My role = 0, my Id = 1, term = 0, Start a command = 101
My role = 0, my Id = 1, term = 0, I am not a leader, return false
My role = 0, my Id = 1, term = 0, index = -1, term = -1, isLeader = false, Start a command = 101 end
My role = 0, my Id = 2, term = 0, Start a command = 101
My role = 0, my Id = 2, term = 0, I am not a leader, return false
My role = 0, my Id = 2, term = 0, index = -1, term = -1, isLeader = false, Start a command = 101 end
My role = 0, my Id = 0, term = 0, Start a command = 101
My role = 0, my Id = 0, term = 0, I am not a leader, return false
My role = 0, my Id = 0, term = 0, index = -1, term = -1, isLeader = false, Start a command = 101 end
My role = 0, my Id = 1, term = 0, Start a command = 101
My role = 0, my Id = 1, term = 0, I am not a leader, return false
My role = 0, my Id = 1, term = 0, index = -1, term = -1, isLeader = false, Start a command = 101 end
My role = 0, my Id = 2, term = 0, Start a command = 101
My role = 0, my Id = 2, term = 0, I am not a leader, return false
My role = 0, my Id = 2, term = 0, index = -1, term = -1, isLeader = false, Start a command = 101 end
My role = 0, my Id = 0, term = 0, Start a command = 101
My role = 0, my Id = 0, term = 0, I am not a leader, return false
My role = 0, my Id = 0, term = 0, index = -1, term = -1, isLeader = false, Start a command = 101 end
My role = 0, my Id = 1, term = 0, Start a command = 101
My role = 0, my Id = 1, term = 0, I am not a leader, return false
My role = 0, my Id = 1, term = 0, index = -1, term = -1, isLeader = false, Start a command = 101 end
My role = 0, my Id = 2, term = 0, Start a command = 101
My role = 0, my Id = 2, term = 0, I am not a leader, return false
My role = 0, my Id = 2, term = 0, index = -1, term = -1, isLeader = false, Start a command = 101 end
My role = 0, my Id = 0, term = 0, Start a command = 101
My role = 0, my Id = 0, term = 0, I am not a leader, return false
My role = 0, my Id = 0, term = 0, index = -1, term = -1, isLeader = false, Start a command = 101 end
follower = 1, get timer.C channel, time out
Follower = 1, term = 0, stage end......
Candidate = 1, term = 1, stage start......
electTimer = 465
candidate = 1, term = 1, LastLogIndex = 0, LastLogTerm = 0
candidate = 1, term = 1, LastLogIndex = 0, LastLogTerm = 0
candidate = 1, rpc executedId = 0, term = 1, set rpcTimeout = 500
candidate = 1, rpc executedId = 0, term = 1, send rpc request start......
candidate = 1, rpc executedId = 2, term = 1, set rpcTimeout = 500
candidate = 1, rpc executedId = 2, term = 1, send rpc request start......
My role = 0, my Id = 0, term = 0, args.Term = 1, receive a vote request from candidate = 1
My role = 0, my Id = 0, voteDone, start send channel, candidate = 1
My role = 0, my Id = 0, voteDone, somewhere receive channel, candidate = 1
follower = 0, get channel rf.rpcState
follower = 0, vote to somebody
My role = 0, my Id = 2, term = 0, args.Term = 1, receive a vote request from candidate = 1
My role = 0, my Id = 2, voteDone, start send channel, candidate = 1
My role = 0, my Id = 2, voteDone, somewhere receive channel, candidate = 1
follower = 0, term = 1, timeout = 910
follower = 0, term = 1, running.........
follower = 2, get channel rf.rpcState
follower = 2, vote to somebody
candidate = 1, rpc executedId = 0, term = 1, send rpc request end, result = true......
candidate = 1, term = 1, rpcChan has not been closed
%!(EXTRA int=0)candidate = 1, term = 1, rpc executedId = 0, rpcReplyChan sned
candidate = 1, term = 1, rpc executedId = 0, rpcReplyChan end
candidate = 1, term = 1, rpc executedId = 0, rpcReplyChan sned
follower = 2, term = 1, timeout = 825
candidate = 1, term = 1, rpc executedId = 0, rpcReplyChan sned over
follower = 2, term = 1, running.........
candidate = 1, term = 1, server = 0, rpc succeeded
candidate = 1, term = 1, server = 0 voted a granted vote
candidate = 1, term = 1, server = 0, IsServerAllTrue = true, ValidServerCount = 3, rpcCount = 2
candidate = 1, rpc executedId = 2, term = 1, send rpc request end, result = true......
candidate = 1, term = 1, rpcChan has not been closed
%!(EXTRA int=2)candidate = 1, term = 1, rpc executedId = 2, rpcReplyChan sned
candidate = 1, term = 1, rpc executedId = 2, rpcReplyChan end
candidate = 1, term = 1, rpc executedId = 2, rpcReplyChan sned
candidate = 1, term = 1, server = 2, rpc succeeded
candidate = 1, term = 1, server = 2 voted a granted vote
candidate = 1, term = 1, server = 2, IsServerAllTrue = true, ValidServerCount = 3, rpcCount = 3
candidate = 1, term = 1, numberOfVotes = 3, ValidServerCount 3, calculateVoutes start
There is quorum
candidate = 1, term = 1, get majority votes
Candidate = 1, term = 1, stage end......
leader = 1, term = 1, I am a leader now
leader = 1, term = 1, start a heartbeatTimer
candidate = 1, term = 1, rpc executedId = 2, rpcReplyChan sned over
My role = 2, my Id = 1, term = 1, Start a command = 101
My role = 2, my Id = 1, term = 1, I am leader
server = 0, nextIndex[0] = 2
server = 1, nextIndex[1] = 2
server = 2, nextIndex[2] = 2
My role = 2, my Id = 1, term = 1, rf.log[0].Term = 0, rf.log[0].Entry = 
My role = 2, my Id = 1, term = 1, rf.log[1].Term = 1, rf.log[1].Entry = 101
My role = 2, my Id = 1, term = 1, index = 1, term = 1, isLeader = true, Start a command = 101 end
Found leader, index = 1
i = 0, index = 1, cmd1 = 0, ok = false
i = 1, index = 1, cmd1 = 0, ok = false
i = 2, index = 1, cmd1 = 0, ok = false
i = 0, index = 1, cmd1 = 0, ok = false
i = 1, index = 1, cmd1 = 0, ok = false
i = 2, index = 1, cmd1 = 0, ok = false
i = 0, index = 1, cmd1 = 0, ok = false
i = 1, index = 1, cmd1 = 0, ok = false
i = 2, index = 1, cmd1 = 0, ok = false
i = 0, index = 1, cmd1 = 0, ok = false
i = 1, index = 1, cmd1 = 0, ok = false
i = 2, index = 1, cmd1 = 0, ok = false
i = 0, index = 1, cmd1 = 0, ok = false
i = 1, index = 1, cmd1 = 0, ok = false
i = 2, index = 1, cmd1 = 0, ok = false
leader = 1, term = 1, heartbeat timerout
leader = 1, term = 1, rf.nextIndex[0] = 2
leader = 1, term = 1, len(rf.log) = 2
leader = 1, term = 1, entries[0] = {101 1}
leader = 1, rpc executedId = 0, term = 1, set rpcTimeout = 500
leader = 1, term = 1, rpc executedId = 0, send rpc request start......
leader = 1, term = 1, rf.nextIndex[2] = 2
leader = 1, term = 1, len(rf.log) = 2
leader = 1, term = 1, entries[0] = {101 1}
leader = 1, rpc executedId = 2, term = 1, set rpcTimeout = 500
leader = 1, term = 1, rpc executedId = 2, send rpc request start......
My role = 0, Id = 0, term = 1, get heartbeat from leader = 1
My role = 0, Id = 0, args.Term = 1, rf.currentTerm = 1
My role = 0, Id = 0, term = 1, AppendEntries true
My role = 0, Id = 0, term = 1, AppendEntries, len(rf.log) = PrevLogIndex
My role = 0, Id = 0, term = 1, AppendEntries, log[0].Entry = 
My role = 0, Id = 0, term = 1, AppendEntries, log[1].Entry = 101
My role = 0, Id = 0, term = 1, AppendEntries, len(rf.log) = PrevLogIndex, len(rf.log) = 1, success = true
My role = 0, Id = 0, term = 1, send heartbeatChan start
My role = 0, Id = 0, term = 1, send heartbeatChan end
follower = 0, get channel rf.rpcState
follower = 0, term = 1, isApplyMsg = true
follower = 0, term = 1, timeout = 919
follower = 0, term = 1, running.........
follower = 0, term = 1, applyChan send
follower = 0, term = 1, applyChan send end
My role = 0, Id = 2, term = 1, get heartbeat from leader = 1
leader = 1, term = 1, rpc executedId = 0, send rpc request end, result = true......
leader = 1, term = 1, rpc executedId = 0, rpcChan has not been closed
leader = 1, term = 1, rpc executedId = 0, rpcChan sned
leader = 1, term = 1, rpc executedId = 0, rpcChan end
leader = 1, term = 1, rpc executedId = 0, rpcReplyChan sned
My role = 0, Id = 2, args.Term = 1, rf.currentTerm = 1
My role = 0, Id = 2, term = 1, AppendEntries true
leader = 1, term = 1, follower = 0, rpc succeed
leader = 1, term = 1, isServerAllTrue = true, ValidServerCount = 3, rpcSucceedCount = 2
leader = 1, term = 1, rpc executedId = 0, rpcReplyChan sned over
My role = 0, Id = 2, term = 1, AppendEntries, len(rf.log) = PrevLogIndex
My role = 0, Id = 2, term = 1, AppendEntries, log[0].Entry = 
My role = 0, Id = 2, term = 1, AppendEntries, log[1].Entry = 101
My role = 0, Id = 2, term = 1, AppendEntries, len(rf.log) = PrevLogIndex, len(rf.log) = 1, success = true
My role = 0, Id = 2, term = 1, send heartbeatChan start
My role = 0, Id = 2, term = 1, send heartbeatChan end
follower = 2, get channel rf.rpcState
follower = 2, term = 1, isApplyMsg = true
follower = 2, term = 1, timeout = 814
follower = 2, term = 1, running.........
follower = 2, term = 1, applyChan send
follower = 2, term = 1, applyChan send end
leader = 1, term = 1, rpc executedId = 2, send rpc request end, result = true......
leader = 1, term = 1, rpc executedId = 2, rpcChan has not been closed
leader = 1, term = 1, rpc executedId = 2, rpcChan sned
leader = 1, term = 1, rpc executedId = 2, rpcChan end
leader = 1, term = 1, rpc executedId = 2, rpcReplyChan sned
leader = 1, term = 1, follower = 2, rpc succeed
leader = 1, term = 1, isServerAllTrue = true, ValidServerCount = 3, rpcSucceedCount = 3
leader = 1, term = 1, ValidServerCount = 3, rpcSucceedCount = 3, a heartbeat round is end
There is quorum
leader = 1, term = 1, isHeartbeat = false
leader = 1, term = 1, majority server has duplicated, commitIndex = 1, exit appendEntries
leader = 1, term = 1, heartbeat operation end, reset the leaderTimer
leader = 1, term = 1, stage of leader end
leader = 1, term = 1, start a heartbeatTimer
leader = 1, term = 1, rpc executedId = 2, rpcReplyChan sned over
leader = 1, term = 1,len(rf.log) = 2, commitIndex = 1, send applyMsg
leader = 1, term = 1,len(rf.log) = 2, commitIndex = 1, send applyMsg end
i = 0, index = 1, cmd1 = 101, ok = true
i = 1, index = 1, cmd1 = 101, ok = true
i = 2, index = 1, cmd1 = 101, ok = true
Test (2B): checkOneLeader
checkOneLeader, sleep ms = 453 start
leader = 1, term = 1, heartbeat timerout
leader = 1, term = 1, rf.nextIndex[0] = 2
leader = 1, term = 1, len(rf.log) = 2
leader = 1, term = 1, rf.nextIndex[2] = 2
leader = 1, term = 1, len(rf.log) = 2
leader = 1, rpc executedId = 2, term = 1, set rpcTimeout = 500
leader = 1, rpc executedId = 0, term = 1, set rpcTimeout = 500
leader = 1, term = 1, rpc executedId = 2, send rpc request start......
leader = 1, term = 1, rpc executedId = 0, send rpc request start......
My role = 0, Id = 2, term = 1, get heartbeat from leader = 1
My role = 0, Id = 2, args.Term = 1, rf.currentTerm = 1
My role = 0, Id = 2, term = 1, AppendEntries true
My role = 0, Id = 2, term = 1, AppendEntries, len(rf.log) > PrevLogIndex
My role = 0, Id = 2, term = 1, AppendEntries, rf.log[args.PrevLogIndex].Term == args.PrevLogTerm, reply.Success = true
My role = 0, Id = 2, term = 1, entry = null, this is heartbeat, reply success = true
My role = 0, Id = 2, term = 1, send heartbeatChan start
My role = 0, Id = 2, term = 1, send heartbeatChan end
My role = 0, Id = 0, term = 1, get heartbeat from leader = 1
My role = 0, Id = 0, args.Term = 1, rf.currentTerm = 1
My role = 0, Id = 0, term = 1, AppendEntries true
My role = 0, Id = 0, term = 1, AppendEntries, len(rf.log) > PrevLogIndex
My role = 0, Id = 0, term = 1, AppendEntries, rf.log[args.PrevLogIndex].Term == args.PrevLogTerm, reply.Success = true
My role = 0, Id = 0, term = 1, entry = null, this is heartbeat, reply success = true
My role = 0, Id = 0, term = 1, send heartbeatChan start
My role = 0, Id = 0, term = 1, send heartbeatChan end
follower = 2, get channel rf.rpcState
follower = 2, term = 1, timeout = 832
follower = 2, term = 1, running.........
leader = 1, term = 1, rpc executedId = 2, send rpc request end, result = true......
leader = 1, term = 1, rpc executedId = 2, rpcChan has not been closed
leader = 1, term = 1, rpc executedId = 2, rpcChan sned
leader = 1, term = 1, rpc executedId = 2, rpcChan end
leader = 1, term = 1, rpc executedId = 0, send rpc request end, result = true......
leader = 1, term = 1, rpc executedId = 0, rpcChan has not been closed
leader = 1, term = 1, rpc executedId = 0, rpcChan sned
leader = 1, term = 1, rpc executedId = 0, rpcChan end
leader = 1, term = 1, rpc executedId = 0, rpcReplyChan sned
leader = 1, term = 1, rpc executedId = 2, rpcReplyChan sned
follower = 0, get channel rf.rpcState
leader = 1, term = 1, follower = 0, rpc succeed
leader = 1, term = 1, isServerAllTrue = true, ValidServerCount = 3, rpcSucceedCount = 2
leader = 1, term = 1, follower = 2, rpc succeed
follower = 0, term = 1, timeout = 900
leader = 1, term = 1, rpc executedId = 2, rpcReplyChan sned over
leader = 1, term = 1, rpc executedId = 0, rpcReplyChan sned over
follower = 0, term = 1, running.........
leader = 1, term = 1, isServerAllTrue = true, ValidServerCount = 3, rpcSucceedCount = 3
leader = 1, term = 1, ValidServerCount = 3, rpcSucceedCount = 3, a heartbeat round is end
There is quorum
leader = 1, term = 1, isHeartbeat = true
leader = 1, term = 1, heartbeat operation end, reset the leaderTimer
leader = 1, term = 1, stage of leader end
leader = 1, term = 1, start a heartbeatTimer
leader = 1, term = 1, heartbeat timerout
leader = 1, term = 1, rf.nextIndex[0] = 2
leader = 1, term = 1, len(rf.log) = 2
leader = 1, term = 1, rf.nextIndex[2] = 2
leader = 1, term = 1, len(rf.log) = 2
leader = 1, rpc executedId = 0, term = 1, set rpcTimeout = 500
leader = 1, rpc executedId = 2, term = 1, set rpcTimeout = 500
leader = 1, term = 1, rpc executedId = 0, send rpc request start......
leader = 1, term = 1, rpc executedId = 2, send rpc request start......
My role = 0, Id = 2, term = 1, get heartbeat from leader = 1
My role = 0, Id = 2, args.Term = 1, rf.currentTerm = 1
My role = 0, Id = 2, term = 1, AppendEntries true
My role = 0, Id = 2, term = 1, AppendEntries, len(rf.log) > PrevLogIndex
My role = 0, Id = 2, term = 1, AppendEntries, rf.log[args.PrevLogIndex].Term == args.PrevLogTerm, reply.Success = true
My role = 0, Id = 2, term = 1, entry = null, this is heartbeat, reply success = true
My role = 0, Id = 2, term = 1, send heartbeatChan start
My role = 0, Id = 2, term = 1, send heartbeatChan end
My role = 0, Id = 0, term = 1, get heartbeat from leader = 1
My role = 0, Id = 0, args.Term = 1, rf.currentTerm = 1
My role = 0, Id = 0, term = 1, AppendEntries true
My role = 0, Id = 0, term = 1, AppendEntries, len(rf.log) > PrevLogIndex
My role = 0, Id = 0, term = 1, AppendEntries, rf.log[args.PrevLogIndex].Term == args.PrevLogTerm, reply.Success = true
My role = 0, Id = 0, term = 1, entry = null, this is heartbeat, reply success = true
My role = 0, Id = 0, term = 1, send heartbeatChan start
follower = 2, get channel rf.rpcState
follower = 2, term = 1, timeout = 903
My role = 0, Id = 0, term = 1, send heartbeatChan end
leader = 1, term = 1, rpc executedId = 2, send rpc request end, result = true......
leader = 1, term = 1, rpc executedId = 2, rpcChan has not been closed
leader = 1, term = 1, rpc executedId = 2, rpcChan sned
leader = 1, term = 1, rpc executedId = 2, rpcChan end
leader = 1, term = 1, rpc executedId = 2, rpcReplyChan sned
follower = 2, term = 1, running.........
follower = 0, get channel rf.rpcState
follower = 0, term = 1, timeout = 840
follower = 0, term = 1, running.........
leader = 1, term = 1, rpc executedId = 2, rpcReplyChan sned over
leader = 1, term = 1, follower = 2, rpc succeed
leader = 1, term = 1, rpc executedId = 0, send rpc request end, result = true......
leader = 1, term = 1, rpc executedId = 0, rpcChan has not been closed
leader = 1, term = 1, rpc executedId = 0, rpcChan sned
leader = 1, term = 1, rpc executedId = 0, rpcChan end
leader = 1, term = 1, rpc executedId = 0, rpcReplyChan sned
leader = 1, term = 1, isServerAllTrue = true, ValidServerCount = 3, rpcSucceedCount = 2
leader = 1, term = 1, follower = 0, rpc succeed
leader = 1, term = 1, isServerAllTrue = true, ValidServerCount = 3, rpcSucceedCount = 3
leader = 1, term = 1, ValidServerCount = 3, rpcSucceedCount = 3, a heartbeat round is end
There is quorum
leader = 1, term = 1, isHeartbeat = true
leader = 1, term = 1, heartbeat operation end, reset the leaderTimer
leader = 1, term = 1, stage of leader end
leader = 1, term = 1, start a heartbeatTimer
leader = 1, term = 1, rpc executedId = 0, rpcReplyChan sned over
leader = 1, term = 1, heartbeat timerout
leader = 1, term = 1, rf.nextIndex[0] = 2
leader = 1, term = 1, len(rf.log) = 2
leader = 1, term = 1, rf.nextIndex[2] = 2
leader = 1, term = 1, len(rf.log) = 2
leader = 1, rpc executedId = 0, term = 1, set rpcTimeout = 500
leader = 1, term = 1, rpc executedId = 0, send rpc request start......
leader = 1, rpc executedId = 2, term = 1, set rpcTimeout = 500
leader = 1, term = 1, rpc executedId = 2, send rpc request start......
My role = 0, Id = 0, term = 1, get heartbeat from leader = 1
My role = 0, Id = 0, args.Term = 1, rf.currentTerm = 1
My role = 0, Id = 0, term = 1, AppendEntries true
My role = 0, Id = 0, term = 1, AppendEntries, len(rf.log) > PrevLogIndex
My role = 0, Id = 0, term = 1, AppendEntries, rf.log[args.PrevLogIndex].Term == args.PrevLogTerm, reply.Success = true
My role = 0, Id = 0, term = 1, entry = null, this is heartbeat, reply success = true
My role = 0, Id = 0, term = 1, send heartbeatChan start
My role = 0, Id = 0, term = 1, send heartbeatChan end
My role = 0, Id = 2, term = 1, get heartbeat from leader = 1
My role = 0, Id = 2, args.Term = 1, rf.currentTerm = 1
My role = 0, Id = 2, term = 1, AppendEntries true
follower = 0, get channel rf.rpcState
follower = 0, term = 1, timeout = 908
follower = 0, term = 1, running.........
My role = 0, Id = 2, term = 1, AppendEntries, len(rf.log) > PrevLogIndex
My role = 0, Id = 2, term = 1, AppendEntries, rf.log[args.PrevLogIndex].Term == args.PrevLogTerm, reply.Success = true
My role = 0, Id = 2, term = 1, entry = null, this is heartbeat, reply success = true
My role = 0, Id = 2, term = 1, send heartbeatChan start
My role = 0, Id = 2, term = 1, send heartbeatChan end
follower = 2, get channel rf.rpcState
follower = 2, term = 1, timeout = 940
follower = 2, term = 1, running.........
leader = 1, term = 1, rpc executedId = 0, send rpc request end, result = true......
leader = 1, term = 1, rpc executedId = 0, rpcChan has not been closed
leader = 1, term = 1, rpc executedId = 0, rpcChan sned
leader = 1, term = 1, rpc executedId = 0, rpcChan end
leader = 1, term = 1, rpc executedId = 0, rpcReplyChan sned
leader = 1, term = 1, rpc executedId = 2, send rpc request end, result = true......
leader = 1, term = 1, rpc executedId = 2, rpcChan has not been closed
leader = 1, term = 1, rpc executedId = 2, rpcChan sned
leader = 1, term = 1, rpc executedId = 2, rpcChan end
leader = 1, term = 1, rpc executedId = 2, rpcReplyChan sned
leader = 1, term = 1, follower = 0, rpc succeed
leader = 1, term = 1, rpc executedId = 0, rpcReplyChan sned over
leader = 1, term = 1, isServerAllTrue = true, ValidServerCount = 3, rpcSucceedCount = 2
leader = 1, term = 1, follower = 2, rpc succeed
leader = 1, term = 1, isServerAllTrue = true, ValidServerCount = 3, rpcSucceedCount = 3
leader = 1, term = 1, ValidServerCount = 3, rpcSucceedCount = 3, a heartbeat round is end
There is quorum
leader = 1, term = 1, isHeartbeat = true
leader = 1, term = 1, heartbeat operation end, reset the leaderTimer
leader = 1, term = 1, stage of leader end
leader = 1, term = 1, start a heartbeatTimer
leader = 1, term = 1, rpc executedId = 2, rpcReplyChan sned over
leader = 1, term = 1, heartbeat timerout
leader = 1, term = 1, rf.nextIndex[0] = 2
leader = 1, term = 1, len(rf.log) = 2
leader = 1, term = 1, rf.nextIndex[2] = 2
leader = 1, term = 1, len(rf.log) = 2
leader = 1, rpc executedId = 0, term = 1, set rpcTimeout = 500
leader = 1, term = 1, rpc executedId = 0, send rpc request start......
leader = 1, rpc executedId = 2, term = 1, set rpcTimeout = 500
leader = 1, term = 1, rpc executedId = 2, send rpc request start......
My role = 0, Id = 0, term = 1, get heartbeat from leader = 1
My role = 0, Id = 0, args.Term = 1, rf.currentTerm = 1
My role = 0, Id = 0, term = 1, AppendEntries true
My role = 0, Id = 0, term = 1, AppendEntries, len(rf.log) > PrevLogIndex
My role = 0, Id = 0, term = 1, AppendEntries, rf.log[args.PrevLogIndex].Term == args.PrevLogTerm, reply.Success = true
My role = 0, Id = 0, term = 1, entry = null, this is heartbeat, reply success = true
My role = 0, Id = 0, term = 1, send heartbeatChan start
My role = 0, Id = 0, term = 1, send heartbeatChan end
follower = 0, get channel rf.rpcState
My role = 0, Id = 2, term = 1, get heartbeat from leader = 1
My role = 0, Id = 2, args.Term = 1, rf.currentTerm = 1
My role = 0, Id = 2, term = 1, AppendEntries true
My role = 0, Id = 2, term = 1, AppendEntries, len(rf.log) > PrevLogIndex
My role = 0, Id = 2, term = 1, AppendEntries, rf.log[args.PrevLogIndex].Term == args.PrevLogTerm, reply.Success = true
My role = 0, Id = 2, term = 1, entry = null, this is heartbeat, reply success = true
My role = 0, Id = 2, term = 1, send heartbeatChan start
My role = 0, Id = 2, term = 1, send heartbeatChan end
follower = 0, term = 1, timeout = 947
leader = 1, term = 1, rpc executedId = 0, send rpc request end, result = true......
leader = 1, term = 1, rpc executedId = 0, rpcChan has not been closed
leader = 1, term = 1, rpc executedId = 0, rpcChan sned
leader = 1, term = 1, rpc executedId = 0, rpcChan end
leader = 1, term = 1, rpc executedId = 0, rpcReplyChan sned
follower = 0, term = 1, running.........
follower = 2, get channel rf.rpcState
leader = 1, term = 1, rpc executedId = 0, rpcReplyChan sned over
follower = 2, term = 1, timeout = 898
follower = 2, term = 1, running.........
leader = 1, term = 1, follower = 0, rpc succeed
leader = 1, term = 1, isServerAllTrue = true, ValidServerCount = 3, rpcSucceedCount = 2
leader = 1, term = 1, rpc executedId = 2, send rpc request end, result = true......
leader = 1, term = 1, rpc executedId = 2, rpcChan has not been closed
leader = 1, term = 1, rpc executedId = 2, rpcChan sned
leader = 1, term = 1, rpc executedId = 2, rpcChan end
leader = 1, term = 1, rpc executedId = 2, rpcReplyChan sned
leader = 1, term = 1, follower = 2, rpc succeed
leader = 1, term = 1, isServerAllTrue = true, ValidServerCount = 3, rpcSucceedCount = 3
leader = 1, term = 1, ValidServerCount = 3, rpcSucceedCount = 3, a heartbeat round is end
There is quorum
leader = 1, term = 1, isHeartbeat = true
leader = 1, term = 1, heartbeat operation end, reset the leaderTimer
leader = 1, term = 1, stage of leader end
leader = 1, term = 1, start a heartbeatTimer
leader = 1, term = 1, rpc executedId = 2, rpcReplyChan sned over
checkOneLeader, sleep ms = 453 end
Get state, My role = 0, Id = 0, term = 1, I am not a reader
Get state, My role = 2, Id = 1, term = 1, I am a reader
Get state, My role = 0, Id = 2, term = 1, I am not a reader
checkOneLeader, return leaders[lastTermWithLeader][0] = 1
Test (2B): disconnect server (leader+1)%servers = 2
disconnect(2)
Test (2B): start entry 102
My role = 2, my Id = 1, term = 1, Start a command = 102
My role = 2, my Id = 1, term = 1, I am leader
server = 0, nextIndex[0] = 3
server = 1, nextIndex[1] = 3
server = 2, nextIndex[2] = 3
My role = 2, my Id = 1, term = 1, rf.log[0].Term = 0, rf.log[0].Entry = 
My role = 2, my Id = 1, term = 1, rf.log[1].Term = 1, rf.log[1].Entry = 101
My role = 2, my Id = 1, term = 1, rf.log[2].Term = 1, rf.log[2].Entry = 102
My role = 2, my Id = 1, term = 1, index = 2, term = 1, isLeader = true, Start a command = 102 end
Found leader, index = 2
i = 0, index = 2, cmd1 = 0, ok = false
i = 1, index = 2, cmd1 = 0, ok = false
i = 2, index = 2, cmd1 = 0, ok = false
i = 0, index = 2, cmd1 = 0, ok = false
i = 1, index = 2, cmd1 = 0, ok = false
i = 2, index = 2, cmd1 = 0, ok = false
leader = 1, term = 1, heartbeat timerout
leader = 1, term = 1, rf.nextIndex[0] = 3
leader = 1, term = 1, len(rf.log) = 3
leader = 1, term = 1, entries[0] = {102 1}
leader = 1, rpc executedId = 0, term = 1, set rpcTimeout = 500
leader = 1, term = 1, rpc executedId = 0, send rpc request start......
leader = 1, term = 1, rf.nextIndex[2] = 3
leader = 1, term = 1, len(rf.log) = 3
leader = 1, term = 1, entries[0] = {102 1}
leader = 1, rpc executedId = 2, term = 1, set rpcTimeout = 500
leader = 1, term = 1, rpc executedId = 2, send rpc request start......
My role = 0, Id = 0, term = 1, get heartbeat from leader = 1
My role = 0, Id = 0, args.Term = 1, rf.currentTerm = 1
My role = 0, Id = 0, term = 1, AppendEntries true
My role = 0, Id = 0, term = 1, AppendEntries, len(rf.log) = PrevLogIndex
My role = 0, Id = 0, term = 1, AppendEntries, len(rf.log) = PrevLogIndex, len(rf.log) != 1, success = false
My role = 0, Id = 0, term = 1, send heartbeatChan start
My role = 0, Id = 0, term = 1, send heartbeatChan end
follower = 0, get channel rf.rpcState
follower = 0, term = 1, timeout = 877
follower = 0, term = 1, running.........
leader = 1, term = 1, rpc executedId = 0, send rpc request end, result = true......
leader = 1, term = 1, rpc executedId = 0, rpcChan has not been closed
leader = 1, term = 1, rpc executedId = 0, rpcChan sned
leader = 1, term = 1, rpc executedId = 0, rpcChan end
leader = 1, term = 1, rpc executedId = 0, rpcReplyChan sned
leader = 1, term = 1, follower = 0, rpc succeed
appendEntries failure......
leader = 1, term = 1, rf.nextIndex[0] = 2
leader = 1, term = 1, len(rf.log) = 3
leader = 1, term = 1, entries[0] = {101 1}
leader = 1, term = 1, entries[1] = {102 1}
leader = 1, term = 1, rpc executedId = 0, rpcReplyChan sned over
leader = 1, rpc executedId = 0, term = 1, set rpcTimeout = 500
leader = 1, term = 1, rpc executedId = 0, send rpc request start......
My role = 0, Id = 0, term = 1, get heartbeat from leader = 1
My role = 0, Id = 0, args.Term = 1, rf.currentTerm = 1
My role = 0, Id = 0, term = 1, AppendEntries true
My role = 0, Id = 0, term = 1, AppendEntries, len(rf.log) > PrevLogIndex
My role = 0, Id = 0, term = 1, AppendEntries, rf.log[args.PrevLogIndex].Term == args.PrevLogTerm, reply.Success = true
My role = 0, Id = 0, term = 1, AppendEntries, log[0].Entry = 
My role = 0, Id = 0, term = 1, AppendEntries, log[1].Entry = 101
My role = 0, Id = 0, term = 1, AppendEntries, log[2].Entry = 102
My role = 0, Id = 0, term = 1, send heartbeatChan start
My role = 0, Id = 0, term = 1, send heartbeatChan end
follower = 0, get channel rf.rpcState
follower = 0, term = 1, isApplyMsg = true
follower = 0, term = 1, timeout = 859
follower = 0, term = 1, running.........
follower = 0, term = 1, applyChan send
follower = 0, term = 1, applyChan send end
leader = 1, term = 1, rpc executedId = 0, send rpc request end, result = true......
leader = 1, term = 1, rpc executedId = 0, rpcChan has not been closed
leader = 1, term = 1, rpc executedId = 0, rpcChan sned
leader = 1, term = 1, rpc executedId = 0, rpcChan end
leader = 1, term = 1, rpc executedId = 0, rpcReplyChan sned
leader = 1, term = 1, follower = 0, rpc succeed
leader = 1, term = 1, isServerAllTrue = true, ValidServerCount = 3, rpcSucceedCount = 3
leader = 1, term = 1, ValidServerCount = 3, rpcSucceedCount = 3, a heartbeat round is end
There is quorum
leader = 1, term = 1, isHeartbeat = false
leader = 1, term = 1, majority server has duplicated, commitIndex = 2, exit appendEntries
leader = 1, term = 1, heartbeat operation end, reset the leaderTimer
leader = 1, term = 1, stage of leader end
leader = 1, term = 1, start a heartbeatTimer
leader = 1, term = 1,len(rf.log) = 3, commitIndex = 2, send applyMsg
leader = 1, term = 1,len(rf.log) = 3, commitIndex = 2, send applyMsg end
leader = 1, term = 1, rpc executedId = 0, rpcReplyChan sned over
i = 0, index = 2, cmd1 = 102, ok = true
i = 1, index = 2, cmd1 = 102, ok = true
i = 2, index = 2, cmd1 = 0, ok = false
Test (2B): start entry 103
My role = 2, my Id = 1, term = 1, Start a command = 103
My role = 2, my Id = 1, term = 1, I am leader
server = 0, nextIndex[0] = 4
server = 1, nextIndex[1] = 4
server = 2, nextIndex[2] = 4
My role = 2, my Id = 1, term = 1, rf.log[0].Term = 0, rf.log[0].Entry = 
My role = 2, my Id = 1, term = 1, rf.log[1].Term = 1, rf.log[1].Entry = 101
My role = 2, my Id = 1, term = 1, rf.log[2].Term = 1, rf.log[2].Entry = 102
My role = 2, my Id = 1, term = 1, rf.log[3].Term = 1, rf.log[3].Entry = 103
My role = 2, my Id = 1, term = 1, index = 3, term = 1, isLeader = true, Start a command = 103 end
Found leader, index = 3
i = 0, index = 3, cmd1 = 0, ok = false
i = 1, index = 3, cmd1 = 0, ok = false
i = 2, index = 3, cmd1 = 0, ok = false
i = 0, index = 3, cmd1 = 0, ok = false
i = 1, index = 3, cmd1 = 0, ok = false
i = 2, index = 3, cmd1 = 0, ok = false
i = 0, index = 3, cmd1 = 0, ok = false
i = 1, index = 3, cmd1 = 0, ok = false
i = 2, index = 3, cmd1 = 0, ok = false
i = 0, index = 3, cmd1 = 0, ok = false
i = 1, index = 3, cmd1 = 0, ok = false
i = 2, index = 3, cmd1 = 0, ok = false
i = 0, index = 3, cmd1 = 0, ok = false
i = 1, index = 3, cmd1 = 0, ok = false
i = 2, index = 3, cmd1 = 0, ok = false
leader = 1, term = 1, heartbeat timerout
leader = 1, term = 1, rf.nextIndex[0] = 4
leader = 1, term = 1, len(rf.log) = 4
leader = 1, term = 1, entries[0] = {103 1}
leader = 1, rpc executedId = 0, term = 1, set rpcTimeout = 500
leader = 1, term = 1, rpc executedId = 0, send rpc request start......
leader = 1, term = 1, rf.nextIndex[2] = 4
leader = 1, term = 1, len(rf.log) = 4
leader = 1, term = 1, entries[0] = {103 1}
leader = 1, rpc executedId = 2, term = 1, set rpcTimeout = 500
leader = 1, term = 1, rpc executedId = 2, send rpc request start......
My role = 0, Id = 0, term = 1, get heartbeat from leader = 1
My role = 0, Id = 0, args.Term = 1, rf.currentTerm = 1
My role = 0, Id = 0, term = 1, AppendEntries true
My role = 0, Id = 0, term = 1, AppendEntries, len(rf.log) = PrevLogIndex
My role = 0, Id = 0, term = 1, AppendEntries, len(rf.log) = PrevLogIndex, len(rf.log) != 1, success = false
My role = 0, Id = 0, term = 1, send heartbeatChan start
My role = 0, Id = 0, term = 1, send heartbeatChan end
follower = 0, get channel rf.rpcState
follower = 0, term = 1, timeout = 829
follower = 0, term = 1, running.........
leader = 1, term = 1, rpc executedId = 0, send rpc request end, result = true......
leader = 1, term = 1, rpc executedId = 0, rpcChan has not been closed
leader = 1, term = 1, rpc executedId = 0, rpcChan sned
leader = 1, term = 1, rpc executedId = 0, rpcChan end
leader = 1, term = 1, rpc executedId = 0, rpcReplyChan sned
leader = 1, term = 1, follower = 0, rpc succeed
appendEntries failure......
leader = 1, term = 1, rf.nextIndex[0] = 3
leader = 1, term = 1, len(rf.log) = 4
leader = 1, term = 1, entries[0] = {102 1}
leader = 1, term = 1, entries[1] = {103 1}
leader = 1, term = 1, rpc executedId = 0, rpcReplyChan sned over
leader = 1, rpc executedId = 0, term = 1, set rpcTimeout = 500
leader = 1, term = 1, rpc executedId = 0, send rpc request start......
My role = 0, Id = 0, term = 1, get heartbeat from leader = 1
My role = 0, Id = 0, args.Term = 1, rf.currentTerm = 1
My role = 0, Id = 0, term = 1, AppendEntries true
My role = 0, Id = 0, term = 1, AppendEntries, len(rf.log) > PrevLogIndex
My role = 0, Id = 0, term = 1, AppendEntries, rf.log[args.PrevLogIndex].Term == args.PrevLogTerm, reply.Success = true
My role = 0, Id = 0, term = 1, AppendEntries, log[0].Entry = 
My role = 0, Id = 0, term = 1, AppendEntries, log[1].Entry = 101
My role = 0, Id = 0, term = 1, AppendEntries, log[2].Entry = 102
My role = 0, Id = 0, term = 1, AppendEntries, log[3].Entry = 103
My role = 0, Id = 0, term = 1, send heartbeatChan start
My role = 0, Id = 0, term = 1, send heartbeatChan end
follower = 0, get channel rf.rpcState
follower = 0, term = 1, isApplyMsg = true
follower = 0, term = 1, timeout = 853
follower = 0, term = 1, running.........
leader = 1, term = 1, rpc executedId = 0, send rpc request end, result = true......
leader = 1, term = 1, rpc executedId = 0, rpcChan has not been closed
leader = 1, term = 1, rpc executedId = 0, rpcChan sned
leader = 1, term = 1, rpc executedId = 0, rpcChan end
leader = 1, term = 1, rpc executedId = 0, rpcReplyChan sned
i = 0, index = 3, cmd1 = 0, ok = false
i = 1, index = 3, cmd1 = 0, ok = false
i = 2, index = 3, cmd1 = 0, ok = false
leader = 1, term = 1, rpc executedId = 0, rpcReplyChan sned over
follower = 0, term = 1, applyChan send
follower = 0, term = 1, applyChan send end
leader = 1, term = 1, follower = 0, rpc succeed
leader = 1, term = 1, isServerAllTrue = true, ValidServerCount = 3, rpcSucceedCount = 3
leader = 1, term = 1, ValidServerCount = 3, rpcSucceedCount = 3, a heartbeat round is end
There is quorum
leader = 1, term = 1, isHeartbeat = false
leader = 1, term = 1, majority server has duplicated, commitIndex = 3, exit appendEntries
leader = 1, term = 1, heartbeat operation end, reset the leaderTimer
leader = 1, term = 1, stage of leader end
leader = 1, term = 1, start a heartbeatTimer
leader = 1, term = 1,len(rf.log) = 4, commitIndex = 3, send applyMsg
leader = 1, term = 1,len(rf.log) = 4, commitIndex = 3, send applyMsg end
i = 0, index = 3, cmd1 = 103, ok = true
i = 1, index = 3, cmd1 = 103, ok = true
i = 2, index = 3, cmd1 = 0, ok = false
Test (2B): sleep election timeout = 1s
leader = 1, term = 1, heartbeat timerout
leader = 1, term = 1, rf.nextIndex[0] = 4
leader = 1, term = 1, len(rf.log) = 4
leader = 1, term = 1, rf.nextIndex[2] = 4
leader = 1, term = 1, len(rf.log) = 4
leader = 1, rpc executedId = 2, term = 1, set rpcTimeout = 500
leader = 1, term = 1, rpc executedId = 2, send rpc request start......
leader = 1, rpc executedId = 0, term = 1, set rpcTimeout = 500
leader = 1, term = 1, rpc executedId = 0, send rpc request start......
My role = 0, Id = 0, term = 1, get heartbeat from leader = 1
My role = 0, Id = 0, args.Term = 1, rf.currentTerm = 1
My role = 0, Id = 0, term = 1, AppendEntries true
My role = 0, Id = 0, term = 1, AppendEntries, len(rf.log) > PrevLogIndex
My role = 0, Id = 0, term = 1, AppendEntries, rf.log[args.PrevLogIndex].Term == args.PrevLogTerm, reply.Success = true
My role = 0, Id = 0, term = 1, entry = null, this is heartbeat, reply success = true
My role = 0, Id = 0, term = 1, send heartbeatChan start
My role = 0, Id = 0, term = 1, send heartbeatChan end
follower = 0, get channel rf.rpcState
follower = 0, term = 1, timeout = 801
follower = 0, term = 1, running.........
leader = 1, term = 1, rpc executedId = 0, send rpc request end, result = true......
leader = 1, term = 1, rpc executedId = 0, rpcChan has not been closed
leader = 1, term = 1, rpc executedId = 0, rpcChan sned
leader = 1, term = 1, rpc executedId = 0, rpcChan end
leader = 1, term = 1, rpc executedId = 0, rpcReplyChan sned
leader = 1, term = 1, follower = 0, rpc succeed
leader = 1, term = 1, isServerAllTrue = true, ValidServerCount = 3, rpcSucceedCount = 2
leader = 1, term = 1, rpc executedId = 0, rpcReplyChan sned over
leader = 1, term = 1, rpc executedId = 2, rpcLeaderReplyChan timeout, send rpcReplyChan
leader = 1, term = 1, rpc executedId = 2, rpcLeaderReplyChan timeout, send rpcReplyChan
leader = 1, term = 1, rpc executedId = 2, rpcLeaderReplyChan timeout, send rpcReplyChan
leader = 1, term = 1, isServerAllTrue = true, ValidServerCount = 3, rpcSucceedCount = 2, rpc failure
leader = 1, term = 1, server = 2 failure times more than 1, set failure flag to it
There is quorum
leader = 1, term = 1, heartbeat operation end, reset the leaderTimer
leader = 1, term = 1, stage of leader end
leader = 1, term = 1, start a heartbeatTimer
leader = 1, term = 1, rpc executedId = 2, rpcLeaderReplyChan timeout, send rpcReplyChan end
follower = 2, get timer.C channel, time out
Follower = 2, term = 1, stage end......
Candidate = 2, term = 2, stage start......
electTimer = 472
candidate = 2, term = 2, LastLogIndex = 1, LastLogTerm = 1
candidate = 2, term = 2, LastLogIndex = 1, LastLogTerm = 1
candidate = 2, rpc executedId = 0, term = 2, set rpcTimeout = 500
candidate = 2, rpc executedId = 0, term = 2, send rpc request start......
candidate = 2, rpc executedId = 1, term = 2, set rpcTimeout = 500
candidate = 2, rpc executedId = 1, term = 2, send rpc request start......
leader = 1, term = 1, heartbeat timerout
leader = 1, term = 1, rf.nextIndex[0] = 4
leader = 1, term = 1, len(rf.log) = 4
leader = 1, term = 1, rf.nextIndex[2] = 4
leader = 1, term = 1, len(rf.log) = 4
leader = 1, rpc executedId = 2, term = 1, set rpcTimeout = 500
leader = 1, term = 1, rpc executedId = 2, send rpc request start......
leader = 1, rpc executedId = 0, term = 1, set rpcTimeout = 500
leader = 1, term = 1, rpc executedId = 0, send rpc request start......
My role = 0, Id = 0, term = 1, get heartbeat from leader = 1
My role = 0, Id = 0, args.Term = 1, rf.currentTerm = 1
My role = 0, Id = 0, term = 1, AppendEntries true
My role = 0, Id = 0, term = 1, AppendEntries, len(rf.log) > PrevLogIndex
My role = 0, Id = 0, term = 1, AppendEntries, rf.log[args.PrevLogIndex].Term == args.PrevLogTerm, reply.Success = true
My role = 0, Id = 0, term = 1, entry = null, this is heartbeat, reply success = true
My role = 0, Id = 0, term = 1, send heartbeatChan start
My role = 0, Id = 0, term = 1, send heartbeatChan end
follower = 0, get channel rf.rpcState
leader = 1, term = 1, rpc executedId = 0, send rpc request end, result = true......
leader = 1, term = 1, rpc executedId = 0, rpcChan has not been closed
leader = 1, term = 1, rpc executedId = 0, rpcChan sned
leader = 1, term = 1, rpc executedId = 0, rpcChan end
follower = 0, term = 1, timeout = 845
follower = 0, term = 1, running.........
leader = 1, term = 1, rpc executedId = 0, rpcReplyChan sned
leader = 1, term = 1, follower = 0, rpc succeed
leader = 1, term = 1, isServerAllTrue = true, ValidServerCount = 3, rpcSucceedCount = 2
leader = 1, term = 1, rpc executedId = 0, rpcReplyChan sned over
Test (2B): start entry 104
My role = 2, my Id = 1, term = 1, Start a command = 104
My role = 2, my Id = 1, term = 1, I am leader
server = 0, nextIndex[0] = 5
server = 1, nextIndex[1] = 5
server = 2, nextIndex[2] = 5
My role = 2, my Id = 1, term = 1, rf.log[0].Term = 0, rf.log[0].Entry = 
My role = 2, my Id = 1, term = 1, rf.log[1].Term = 1, rf.log[1].Entry = 101
My role = 2, my Id = 1, term = 1, rf.log[2].Term = 1, rf.log[2].Entry = 102
My role = 2, my Id = 1, term = 1, rf.log[3].Term = 1, rf.log[3].Entry = 103
My role = 2, my Id = 1, term = 1, rf.log[4].Term = 1, rf.log[4].Entry = 104
My role = 2, my Id = 1, term = 1, index = 4, term = 1, isLeader = true, Start a command = 104 end
Found leader, index = 4
i = 0, index = 4, cmd1 = 0, ok = false
i = 1, index = 4, cmd1 = 0, ok = false
i = 2, index = 4, cmd1 = 0, ok = false
i = 0, index = 4, cmd1 = 0, ok = false
i = 1, index = 4, cmd1 = 0, ok = false
i = 2, index = 4, cmd1 = 0, ok = false
i = 0, index = 4, cmd1 = 0, ok = false
i = 1, index = 4, cmd1 = 0, ok = false
i = 2, index = 4, cmd1 = 0, ok = false
i = 0, index = 4, cmd1 = 0, ok = false
i = 1, index = 4, cmd1 = 0, ok = false
i = 2, index = 4, cmd1 = 0, ok = false
i = 0, index = 4, cmd1 = 0, ok = false
i = 1, index = 4, cmd1 = 0, ok = false
i = 2, index = 4, cmd1 = 0, ok = false
i = 0, index = 4, cmd1 = 0, ok = false
i = 1, index = 4, cmd1 = 0, ok = false
i = 2, index = 4, cmd1 = 0, ok = false
i = 0, index = 4, cmd1 = 0, ok = false
i = 1, index = 4, cmd1 = 0, ok = false
i = 2, index = 4, cmd1 = 0, ok = false
i = 0, index = 4, cmd1 = 0, ok = false
i = 1, index = 4, cmd1 = 0, ok = false
i = 2, index = 4, cmd1 = 0, ok = false
candidate = 2, term = 2, election time out, start a new election
candidate = 2, term = 2, numberOfVotes = 1, ValidServerCount 3, calculateVoutes start
There is quorum
candidate = 2, term = 2, get less votes
Candidate = 2, term = 2, stage end......
Candidate = 2, term = 3, stage start......
electTimer = 453
candidate = 2, term = 3, LastLogIndex = 1, LastLogTerm = 1
candidate = 2, term = 3, LastLogIndex = 1, LastLogTerm = 1
candidate = 2, rpc executedId = 0, term = 3, set rpcTimeout = 500
candidate = 2, rpc executedId = 0, term = 3, send rpc request start......
candidate = 2, rpc executedId = 1, term = 3, set rpcTimeout = 500
candidate = 2, rpc executedId = 1, term = 3, send rpc request start......
i = 0, index = 4, cmd1 = 0, ok = false
i = 1, index = 4, cmd1 = 0, ok = false
i = 2, index = 4, cmd1 = 0, ok = false
candidate = 2, term = 2, rpc executedId = 0, rpcChan timeout, send rpcReplyChan
candidate = 2, term = 2, rpc executedId = 1, rpcChan timeout, send rpcReplyChan
leader = 1, term = 1, rpc executedId = 2, rpcLeaderReplyChan timeout, send rpcReplyChan
leader = 1, term = 1, isServerAllTrue = true, ValidServerCount = 3, rpcSucceedCount = 2, rpc failure
leader = 1, term = 1, server = 2 failure times more than 1, set failure flag to it
There is quorum
leader = 1, term = 1, heartbeat operation end, reset the leaderTimer
leader = 1, term = 1, stage of leader end
leader = 1, term = 1, start a heartbeatTimer
leader = 1, term = 1, rpc executedId = 2, rpcLeaderReplyChan timeout, send rpcReplyChan end
i = 0, index = 4, cmd1 = 0, ok = false
i = 1, index = 4, cmd1 = 0, ok = false
i = 2, index = 4, cmd1 = 0, ok = false
i = 0, index = 4, cmd1 = 0, ok = false
i = 1, index = 4, cmd1 = 0, ok = false
i = 2, index = 4, cmd1 = 0, ok = false
i = 0, index = 4, cmd1 = 0, ok = false
i = 1, index = 4, cmd1 = 0, ok = false
i = 2, index = 4, cmd1 = 0, ok = false
i = 0, index = 4, cmd1 = 0, ok = false
i = 1, index = 4, cmd1 = 0, ok = false
i = 2, index = 4, cmd1 = 0, ok = false
i = 0, index = 4, cmd1 = 0, ok = false
i = 1, index = 4, cmd1 = 0, ok = false
i = 2, index = 4, cmd1 = 0, ok = false
leader = 1, term = 1, heartbeat timerout
leader = 1, term = 1, rf.nextIndex[0] = 5
leader = 1, term = 1, len(rf.log) = 5
leader = 1, term = 1, entries[0] = {104 1}
leader = 1, term = 1, rf.nextIndex[2] = 5
leader = 1, term = 1, len(rf.log) = 5
leader = 1, term = 1, entries[0] = {104 1}
leader = 1, rpc executedId = 0, term = 1, set rpcTimeout = 500
leader = 1, term = 1, rpc executedId = 0, send rpc request start......
leader = 1, rpc executedId = 2, term = 1, set rpcTimeout = 500
leader = 1, term = 1, rpc executedId = 2, send rpc request start......
My role = 0, Id = 0, term = 1, get heartbeat from leader = 1
My role = 0, Id = 0, args.Term = 1, rf.currentTerm = 1
My role = 0, Id = 0, term = 1, AppendEntries true
My role = 0, Id = 0, term = 1, AppendEntries, len(rf.log) = PrevLogIndex
My role = 0, Id = 0, term = 1, AppendEntries, len(rf.log) = PrevLogIndex, len(rf.log) != 1, success = false
My role = 0, Id = 0, term = 1, send heartbeatChan start
My role = 0, Id = 0, term = 1, send heartbeatChan end
leader = 1, term = 1, rpc executedId = 0, send rpc request end, result = true......
leader = 1, term = 1, rpc executedId = 0, rpcChan has not been closed
leader = 1, term = 1, rpc executedId = 0, rpcChan sned
leader = 1, term = 1, rpc executedId = 0, rpcChan end
leader = 1, term = 1, rpc executedId = 0, rpcReplyChan sned
follower = 0, get channel rf.rpcState
leader = 1, term = 1, follower = 0, rpc succeed
appendEntries failure......
leader = 1, term = 1, rf.nextIndex[0] = 4
leader = 1, term = 1, len(rf.log) = 5
leader = 1, term = 1, entries[0] = {103 1}
leader = 1, term = 1, entries[1] = {104 1}
leader = 1, term = 1, rpc executedId = 0, rpcReplyChan sned over
follower = 0, term = 1, timeout = 981
follower = 0, term = 1, running.........
leader = 1, rpc executedId = 0, term = 1, set rpcTimeout = 500
leader = 1, term = 1, rpc executedId = 0, send rpc request start......
My role = 0, Id = 0, term = 1, get heartbeat from leader = 1
My role = 0, Id = 0, args.Term = 1, rf.currentTerm = 1
My role = 0, Id = 0, term = 1, AppendEntries true
My role = 0, Id = 0, term = 1, AppendEntries, len(rf.log) > PrevLogIndex
My role = 0, Id = 0, term = 1, AppendEntries, rf.log[args.PrevLogIndex].Term == args.PrevLogTerm, reply.Success = true
My role = 0, Id = 0, term = 1, AppendEntries, log[0].Entry = 
My role = 0, Id = 0, term = 1, AppendEntries, log[1].Entry = 101
My role = 0, Id = 0, term = 1, AppendEntries, log[2].Entry = 102
My role = 0, Id = 0, term = 1, AppendEntries, log[3].Entry = 103
My role = 0, Id = 0, term = 1, AppendEntries, log[4].Entry = 104
My role = 0, Id = 0, term = 1, send heartbeatChan start
My role = 0, Id = 0, term = 1, send heartbeatChan end
follower = 0, get channel rf.rpcState
follower = 0, term = 1, isApplyMsg = true
leader = 1, term = 1, rpc executedId = 0, send rpc request end, result = true......
leader = 1, term = 1, rpc executedId = 0, rpcChan has not been closed
leader = 1, term = 1, rpc executedId = 0, rpcChan sned
follower = 0, term = 1, timeout = 898
leader = 1, term = 1, rpc executedId = 0, rpcReplyChan sned
leader = 1, term = 1, rpc executedId = 0, rpcChan end
follower = 0, term = 1, running.........
leader = 1, term = 1, follower = 0, rpc succeed
leader = 1, term = 1, isServerAllTrue = true, ValidServerCount = 3, rpcSucceedCount = 3
leader = 1, term = 1, ValidServerCount = 3, rpcSucceedCount = 3, a heartbeat round is end
There is quorum
leader = 1, term = 1, isHeartbeat = false
leader = 1, term = 1, majority server has duplicated, commitIndex = 4, exit appendEntries
leader = 1, term = 1, heartbeat operation end, reset the leaderTimer
leader = 1, term = 1, stage of leader end
leader = 1, term = 1, start a heartbeatTimer
leader = 1, term = 1,len(rf.log) = 5, commitIndex = 4, send applyMsg
leader = 1, term = 1,len(rf.log) = 5, commitIndex = 4, send applyMsg end
leader = 1, term = 1, rpc executedId = 0, rpcReplyChan sned over
follower = 0, term = 1, applyChan send
follower = 0, term = 1, applyChan send end
i = 0, index = 4, cmd1 = 104, ok = true
i = 1, index = 4, cmd1 = 104, ok = true
i = 2, index = 4, cmd1 = 0, ok = false
Test (2B): start entry 105
My role = 2, my Id = 1, term = 1, Start a command = 105
My role = 2, my Id = 1, term = 1, I am leader
server = 0, nextIndex[0] = 6
server = 1, nextIndex[1] = 6
server = 2, nextIndex[2] = 6
My role = 2, my Id = 1, term = 1, rf.log[0].Term = 0, rf.log[0].Entry = 
My role = 2, my Id = 1, term = 1, rf.log[1].Term = 1, rf.log[1].Entry = 101
My role = 2, my Id = 1, term = 1, rf.log[2].Term = 1, rf.log[2].Entry = 102
My role = 2, my Id = 1, term = 1, rf.log[3].Term = 1, rf.log[3].Entry = 103
My role = 2, my Id = 1, term = 1, rf.log[4].Term = 1, rf.log[4].Entry = 104
My role = 2, my Id = 1, term = 1, rf.log[5].Term = 1, rf.log[5].Entry = 105
My role = 2, my Id = 1, term = 1, index = 5, term = 1, isLeader = true, Start a command = 105 end
Found leader, index = 5
i = 0, index = 5, cmd1 = 0, ok = false
i = 1, index = 5, cmd1 = 0, ok = false
i = 2, index = 5, cmd1 = 0, ok = false
i = 0, index = 5, cmd1 = 0, ok = false
i = 1, index = 5, cmd1 = 0, ok = false
i = 2, index = 5, cmd1 = 0, ok = false
i = 0, index = 5, cmd1 = 0, ok = false
i = 1, index = 5, cmd1 = 0, ok = false
i = 2, index = 5, cmd1 = 0, ok = false
i = 0, index = 5, cmd1 = 0, ok = false
i = 1, index = 5, cmd1 = 0, ok = false
i = 2, index = 5, cmd1 = 0, ok = false
i = 0, index = 5, cmd1 = 0, ok = false
i = 1, index = 5, cmd1 = 0, ok = false
i = 2, index = 5, cmd1 = 0, ok = false
leader = 1, term = 1, heartbeat timerout
leader = 1, term = 1, rf.nextIndex[0] = 6
leader = 1, term = 1, len(rf.log) = 6
leader = 1, term = 1, entries[0] = {105 1}
leader = 1, term = 1, rf.nextIndex[2] = 6
leader = 1, term = 1, len(rf.log) = 6
leader = 1, term = 1, entries[0] = {105 1}
leader = 1, rpc executedId = 0, term = 1, set rpcTimeout = 500
leader = 1, term = 1, rpc executedId = 0, send rpc request start......
My role = 0, Id = 0, term = 1, get heartbeat from leader = 1
My role = 0, Id = 0, args.Term = 1, rf.currentTerm = 1
My role = 0, Id = 0, term = 1, AppendEntries true
My role = 0, Id = 0, term = 1, AppendEntries, len(rf.log) = PrevLogIndex
My role = 0, Id = 0, term = 1, AppendEntries, len(rf.log) = PrevLogIndex, len(rf.log) != 1, success = false
My role = 0, Id = 0, term = 1, send heartbeatChan start
My role = 0, Id = 0, term = 1, send heartbeatChan end
leader = 1, term = 1, rpc executedId = 0, send rpc request end, result = true......
leader = 1, term = 1, rpc executedId = 0, rpcChan has not been closed
leader = 1, term = 1, rpc executedId = 0, rpcChan sned
leader = 1, term = 1, rpc executedId = 0, rpcChan end
leader = 1, term = 1, rpc executedId = 0, rpcReplyChan sned
follower = 0, get channel rf.rpcState
leader = 1, term = 1, rpc executedId = 0, rpcReplyChan sned over
leader = 1, rpc executedId = 2, term = 1, set rpcTimeout = 500
follower = 0, term = 1, timeout = 813
follower = 0, term = 1, running.........
leader = 1, term = 1, rpc executedId = 2, send rpc request start......
leader = 1, term = 1, follower = 0, rpc succeed
appendEntries failure......
leader = 1, term = 1, rf.nextIndex[0] = 5
leader = 1, term = 1, len(rf.log) = 6
leader = 1, term = 1, entries[0] = {104 1}
leader = 1, term = 1, entries[1] = {105 1}
leader = 1, rpc executedId = 0, term = 1, set rpcTimeout = 500
leader = 1, term = 1, rpc executedId = 0, send rpc request start......
My role = 0, Id = 0, term = 1, get heartbeat from leader = 1
My role = 0, Id = 0, args.Term = 1, rf.currentTerm = 1
My role = 0, Id = 0, term = 1, AppendEntries true
My role = 0, Id = 0, term = 1, AppendEntries, len(rf.log) > PrevLogIndex
My role = 0, Id = 0, term = 1, AppendEntries, rf.log[args.PrevLogIndex].Term == args.PrevLogTerm, reply.Success = true
My role = 0, Id = 0, term = 1, AppendEntries, log[0].Entry = 
My role = 0, Id = 0, term = 1, AppendEntries, log[1].Entry = 101
My role = 0, Id = 0, term = 1, AppendEntries, log[2].Entry = 102
My role = 0, Id = 0, term = 1, AppendEntries, log[3].Entry = 103
My role = 0, Id = 0, term = 1, AppendEntries, log[4].Entry = 104
My role = 0, Id = 0, term = 1, AppendEntries, log[5].Entry = 105
My role = 0, Id = 0, term = 1, send heartbeatChan start
My role = 0, Id = 0, term = 1, send heartbeatChan end
follower = 0, get channel rf.rpcState
follower = 0, term = 1, isApplyMsg = true
leader = 1, term = 1, rpc executedId = 0, send rpc request end, result = true......
follower = 0, term = 1, timeout = 865
follower = 0, term = 1, running.........
leader = 1, term = 1, rpc executedId = 0, rpcChan has not been closed
leader = 1, term = 1, rpc executedId = 0, rpcChan sned
leader = 1, term = 1, rpc executedId = 0, rpcChan end
leader = 1, term = 1, rpc executedId = 0, rpcReplyChan sned
follower = 0, term = 1, applyChan send
leader = 1, term = 1, follower = 0, rpc succeed
leader = 1, term = 1, isServerAllTrue = true, ValidServerCount = 3, rpcSucceedCount = 3
leader = 1, term = 1, ValidServerCount = 3, rpcSucceedCount = 3, a heartbeat round is end
There is quorum
leader = 1, term = 1, isHeartbeat = false
leader = 1, term = 1, majority server has duplicated, commitIndex = 5, exit appendEntries
leader = 1, term = 1, heartbeat operation end, reset the leaderTimer
leader = 1, term = 1, stage of leader end
leader = 1, term = 1, start a heartbeatTimer
leader = 1, term = 1,len(rf.log) = 6, commitIndex = 5, send applyMsg
leader = 1, term = 1,len(rf.log) = 6, commitIndex = 5, send applyMsg end
leader = 1, term = 1, rpc executedId = 0, rpcReplyChan sned over
follower = 0, term = 1, applyChan send end
i = 0, index = 5, cmd1 = 105, ok = true
i = 1, index = 5, cmd1 = 105, ok = true
i = 2, index = 5, cmd1 = 0, ok = false
connect(2)
My role = 2, my Id = 1, term = 1, Start a command = 106
My role = 2, my Id = 1, term = 1, I am leader
server = 0, nextIndex[0] = 7
server = 1, nextIndex[1] = 7
server = 2, nextIndex[2] = 7
My role = 2, my Id = 1, term = 1, rf.log[0].Term = 0, rf.log[0].Entry = 
My role = 2, my Id = 1, term = 1, rf.log[1].Term = 1, rf.log[1].Entry = 101
My role = 2, my Id = 1, term = 1, rf.log[2].Term = 1, rf.log[2].Entry = 102
My role = 2, my Id = 1, term = 1, rf.log[3].Term = 1, rf.log[3].Entry = 103
My role = 2, my Id = 1, term = 1, rf.log[4].Term = 1, rf.log[4].Entry = 104
My role = 2, my Id = 1, term = 1, rf.log[5].Term = 1, rf.log[5].Entry = 105
My role = 2, my Id = 1, term = 1, rf.log[6].Term = 1, rf.log[6].Entry = 106
My role = 2, my Id = 1, term = 1, index = 6, term = 1, isLeader = true, Start a command = 106 end
Found leader, index = 6
i = 0, index = 6, cmd1 = 0, ok = false
i = 1, index = 6, cmd1 = 0, ok = false
i = 2, index = 6, cmd1 = 0, ok = false
i = 0, index = 6, cmd1 = 0, ok = false
i = 1, index = 6, cmd1 = 0, ok = false
i = 2, index = 6, cmd1 = 0, ok = false
i = 0, index = 6, cmd1 = 0, ok = false
i = 1, index = 6, cmd1 = 0, ok = false
i = 2, index = 6, cmd1 = 0, ok = false
leader = 1, term = 1, rpc executedId = 2, send rpc request end, result = false......
leader = 1, term = 1, rpc executedId = 2, rpcChan has been closed, donot send rpcChan
i = 0, index = 6, cmd1 = 0, ok = false
i = 1, index = 6, cmd1 = 0, ok = false
i = 2, index = 6, cmd1 = 0, ok = false
i = 0, index = 6, cmd1 = 0, ok = false
i = 1, index = 6, cmd1 = 0, ok = false
i = 2, index = 6, cmd1 = 0, ok = false
leader = 1, term = 1, heartbeat timerout
leader = 1, term = 1, rf.nextIndex[0] = 7
leader = 1, term = 1, len(rf.log) = 7
leader = 1, term = 1, entries[0] = {106 1}
leader = 1, term = 1, rf.nextIndex[2] = 7
leader = 1, term = 1, len(rf.log) = 7
leader = 1, term = 1, entries[0] = {106 1}
leader = 1, rpc executedId = 0, term = 1, set rpcTimeout = 500
leader = 1, term = 1, rpc executedId = 0, send rpc request start......
leader = 1, rpc executedId = 2, term = 1, set rpcTimeout = 500
My role = 0, Id = 0, term = 1, get heartbeat from leader = 1
My role = 0, Id = 0, args.Term = 1, rf.currentTerm = 1
My role = 0, Id = 0, term = 1, AppendEntries true
My role = 0, Id = 0, term = 1, AppendEntries, len(rf.log) = PrevLogIndex
My role = 0, Id = 0, term = 1, AppendEntries, len(rf.log) = PrevLogIndex, len(rf.log) != 1, success = false
My role = 0, Id = 0, term = 1, send heartbeatChan start
My role = 0, Id = 0, term = 1, send heartbeatChan end
leader = 1, term = 1, rpc executedId = 0, send rpc request end, result = true......
leader = 1, term = 1, rpc executedId = 0, rpcChan has not been closed
leader = 1, term = 1, rpc executedId = 0, rpcChan sned
leader = 1, term = 1, rpc executedId = 0, rpcChan end
leader = 1, term = 1, rpc executedId = 0, rpcReplyChan sned
leader = 1, term = 1, rpc executedId = 2, send rpc request start......
leader = 1, term = 1, follower = 0, rpc succeed
appendEntries failure......
leader = 1, term = 1, rf.nextIndex[0] = 6
leader = 1, term = 1, len(rf.log) = 7
leader = 1, term = 1, entries[0] = {105 1}
leader = 1, term = 1, entries[1] = {106 1}
My role = 1, Id = 2, term = 3, get heartbeat from leader = 1
My role = 1, Id = 2, args.Term = 1, rf.currentTerm = 3
My role = 1, Id = 2, AppendEntries failure
My role = 1, Id = 2, term = 3, send heartbeatChan start
follower = 0, get channel rf.rpcState
follower = 0, term = 1, timeout = 852
follower = 0, term = 1, running.........
leader = 1, term = 1, rpc executedId = 0, rpcReplyChan sned over
leader = 1, rpc executedId = 0, term = 1, set rpcTimeout = 500
leader = 1, term = 1, rpc executedId = 0, send rpc request start......
My role = 1, Id = 2, term = 3, send heartbeatChan end
My role = 0, Id = 0, term = 1, get heartbeat from leader = 1
My role = 0, Id = 0, args.Term = 1, rf.currentTerm = 1
My role = 0, Id = 0, term = 1, AppendEntries true
My role = 0, Id = 0, term = 1, AppendEntries, len(rf.log) > PrevLogIndex
My role = 0, Id = 0, term = 1, AppendEntries, rf.log[args.PrevLogIndex].Term == args.PrevLogTerm, reply.Success = true
My role = 0, Id = 0, term = 1, AppendEntries, log[0].Entry = 
My role = 0, Id = 0, term = 1, AppendEntries, log[1].Entry = 101
My role = 0, Id = 0, term = 1, AppendEntries, log[2].Entry = 102
My role = 0, Id = 0, term = 1, AppendEntries, log[3].Entry = 103
My role = 0, Id = 0, term = 1, AppendEntries, log[4].Entry = 104
My role = 0, Id = 0, term = 1, AppendEntries, log[5].Entry = 105
My role = 0, Id = 0, term = 1, AppendEntries, log[6].Entry = 106
My role = 0, Id = 0, term = 1, send heartbeatChan start
My role = 0, Id = 0, term = 1, send heartbeatChan end
leader = 1, term = 1, rpc executedId = 0, send rpc request end, result = true......
leader = 1, term = 1, rpc executedId = 0, rpcChan has not been closed
leader = 1, term = 1, rpc executedId = 0, rpcChan sned
leader = 1, term = 1, rpc executedId = 0, rpcChan end
leader = 1, term = 1, rpc executedId = 0, rpcReplyChan sned
leader = 1, term = 1, rpc executedId = 2, send rpc request end, result = true......
leader = 1, term = 1, rpc executedId = 2, rpcChan has not been closed
leader = 1, term = 1, rpc executedId = 0, rpcReplyChan sned over
leader = 1, term = 1, rpc executedId = 2, rpcChan sned
leader = 1, term = 1, rpc executedId = 2, rpcChan end
follower = 0, get channel rf.rpcState
follower = 0, term = 1, isApplyMsg = true
leader = 1, term = 1, rpc executedId = 2, rpcReplyChan sned
leader = 1, term = 1, follower = 0, rpc succeed
leader = 1, term = 1, isServerAllTrue = true, ValidServerCount = 3, rpcSucceedCount = 3
leader = 1, term = 1, ValidServerCount = 3, rpcSucceedCount = 3, a heartbeat round is end
There is quorum
follower = 0, term = 1, timeout = 907
follower = 0, term = 1, running.........
leader = 1, term = 1, isHeartbeat = false
leader = 1, term = 1, majority server has duplicated, commitIndex = 6, exit appendEntries
leader = 1, term = 1, heartbeat operation end, reset the leaderTimer
leader = 1, term = 1, stage of leader end
leader = 1, term = 1, start a heartbeatTimer
leader = 1, term = 1,len(rf.log) = 7, commitIndex = 6, send applyMsg
leader = 1, term = 1,len(rf.log) = 7, commitIndex = 6, send applyMsg end
follower = 0, term = 1, applyChan send
follower = 0, term = 1, applyChan send end
i = 0, index = 6, cmd1 = 106, ok = true
i = 1, index = 6, cmd1 = 106, ok = true
i = 2, index = 6, cmd1 = 0, ok = false
i = 0, index = 6, cmd1 = 106, ok = true
i = 1, index = 6, cmd1 = 106, ok = true
i = 2, index = 6, cmd1 = 0, ok = false
candidate = 2, rpc executedId = 0, term = 3, send rpc request end, result = false......
candidate = 2, term = 3, rpcChan has not been closed
%!(EXTRA int=0)candidate = 2, term = 3, rpc executedId = 0, rpcReplyChan sned
candidate = 2, term = 3, rpc executedId = 0, rpcReplyChan end
candidate = 2, term = 3, rpc executedId = 0, rpcReplyChan sned
candidate = 2, term = 3, server = 0 rpc failure, failCount = 1
candidate = 2, term = 3, server = 0 failure times more than 5, set failure flag to it
candidate = 2, term = 3, server = 0, rpc failed
candidate = 2, term = 3, rpc executedId = 0, rpcReplyChan sned over
i = 0, index = 6, cmd1 = 106, ok = true
i = 1, index = 6, cmd1 = 106, ok = true
i = 2, index = 6, cmd1 = 0, ok = false
i = 0, index = 6, cmd1 = 106, ok = true
i = 1, index = 6, cmd1 = 106, ok = true
i = 2, index = 6, cmd1 = 0, ok = false
i = 0, index = 6, cmd1 = 106, ok = true
i = 1, index = 6, cmd1 = 106, ok = true
i = 2, index = 6, cmd1 = 0, ok = false
leader = 1, term = 1, heartbeat timerout
leader = 1, term = 1, rf.nextIndex[0] = 7
leader = 1, term = 1, len(rf.log) = 7
leader = 1, term = 1, rf.nextIndex[2] = 7
leader = 1, term = 1, len(rf.log) = 7
leader = 1, rpc executedId = 0, term = 1, set rpcTimeout = 500
leader = 1, term = 1, rpc executedId = 0, send rpc request start......
leader = 1, rpc executedId = 2, term = 1, set rpcTimeout = 500
leader = 1, term = 1, rpc executedId = 2, send rpc request start......
My role = 0, Id = 0, term = 1, get heartbeat from leader = 1
My role = 0, Id = 0, args.Term = 1, rf.currentTerm = 1
My role = 0, Id = 0, term = 1, AppendEntries true
My role = 0, Id = 0, term = 1, AppendEntries, len(rf.log) > PrevLogIndex
My role = 0, Id = 0, term = 1, AppendEntries, rf.log[args.PrevLogIndex].Term == args.PrevLogTerm, reply.Success = true
My role = 0, Id = 0, term = 1, entry = null, this is heartbeat, reply success = true
My role = 0, Id = 0, term = 1, send heartbeatChan start
My role = 0, Id = 0, term = 1, send heartbeatChan end
My role = 1, Id = 2, term = 3, get heartbeat from leader = 1
My role = 1, Id = 2, args.Term = 1, rf.currentTerm = 3
My role = 1, Id = 2, AppendEntries failure
My role = 1, Id = 2, term = 3, send heartbeatChan start
follower = 0, get channel rf.rpcState
follower = 0, term = 1, timeout = 937
follower = 0, term = 1, running.........
leader = 1, term = 1, rpc executedId = 0, send rpc request end, result = true......
leader = 1, term = 1, rpc executedId = 0, rpcChan has not been closed
leader = 1, term = 1, rpc executedId = 0, rpcChan sned
leader = 1, term = 1, rpc executedId = 0, rpcChan end
leader = 1, term = 1, rpc executedId = 0, rpcReplyChan sned
leader = 1, term = 1, follower = 0, rpc succeed
leader = 1, term = 1, isServerAllTrue = true, ValidServerCount = 3, rpcSucceedCount = 2
My role = 1, Id = 2, term = 3, send heartbeatChan end
leader = 1, term = 1, rpc executedId = 2, send rpc request end, result = true......
leader = 1, term = 1, rpc executedId = 2, rpcChan has not been closed
leader = 1, term = 1, rpc executedId = 2, rpcChan sned
leader = 1, term = 1, rpc executedId = 2, rpcChan end
leader = 1, term = 1, rpc executedId = 2, rpcReplyChan sned
leader = 1, term = 1, follower = 2, rpc succeed
appendEntries failure......
leader = 1, term = 1, rf.nextIndex[2] = 6
leader = 1, term = 1, len(rf.log) = 7
leader = 1, term = 1, rpc executedId = 2, rpcReplyChan sned over
leader = 1, term = 1, rpc executedId = 0, rpcReplyChan sned over
leader = 1, rpc executedId = 2, term = 1, set rpcTimeout = 500
leader = 1, term = 1, rpc executedId = 2, send rpc request start......
My role = 1, Id = 2, term = 3, get heartbeat from leader = 1
My role = 1, Id = 2, args.Term = 1, rf.currentTerm = 3
My role = 1, Id = 2, AppendEntries failure
My role = 1, Id = 2, term = 3, send heartbeatChan start
My role = 1, Id = 2, term = 3, send heartbeatChan end
leader = 1, term = 1, rpc executedId = 2, send rpc request end, result = true......
leader = 1, term = 1, rpc executedId = 2, rpcChan has not been closed
leader = 1, term = 1, rpc executedId = 2, rpcChan sned
leader = 1, term = 1, rpc executedId = 2, rpcChan end
leader = 1, term = 1, rpc executedId = 2, rpcReplyChan sned
leader = 1, term = 1, follower = 2, rpc succeed
appendEntries failure......
leader = 1, term = 1, rf.nextIndex[2] = 5
leader = 1, term = 1, len(rf.log) = 7
leader = 1, term = 1, rpc executedId = 2, rpcReplyChan sned over
leader = 1, rpc executedId = 2, term = 1, set rpcTimeout = 500
leader = 1, term = 1, rpc executedId = 2, send rpc request start......
My role = 1, Id = 2, term = 3, get heartbeat from leader = 1
My role = 1, Id = 2, args.Term = 1, rf.currentTerm = 3
My role = 1, Id = 2, AppendEntries failure
My role = 1, Id = 2, term = 3, send heartbeatChan start
My role = 1, Id = 2, term = 3, send heartbeatChan end
i = 0, index = 6, cmd1 = 106, ok = true
leader = 1, term = 1, rpc executedId = 2, send rpc request end, result = true......
leader = 1, term = 1, rpc executedId = 2, rpcChan has not been closed
leader = 1, term = 1, rpc executedId = 2, rpcChan sned
leader = 1, term = 1, rpc executedId = 2, rpcChan end
leader = 1, term = 1, rpc executedId = 2, rpcReplyChan sned
i = 1, index = 6, cmd1 = 106, ok = true
leader = 1, term = 1, rpc executedId = 2, rpcReplyChan sned over
i = 2, index = 6, cmd1 = 0, ok = false
leader = 1, term = 1, follower = 2, rpc succeed
appendEntries failure......
leader = 1, term = 1, rf.nextIndex[2] = 4
leader = 1, term = 1, len(rf.log) = 7
leader = 1, rpc executedId = 2, term = 1, set rpcTimeout = 500
leader = 1, term = 1, rpc executedId = 2, send rpc request start......
My role = 1, Id = 2, term = 3, get heartbeat from leader = 1
My role = 1, Id = 2, args.Term = 1, rf.currentTerm = 3
My role = 1, Id = 2, AppendEntries failure
My role = 1, Id = 2, term = 3, send heartbeatChan start
My role = 1, Id = 2, term = 3, send heartbeatChan end
leader = 1, term = 1, rpc executedId = 2, send rpc request end, result = true......
leader = 1, term = 1, rpc executedId = 2, rpcChan has not been closed
leader = 1, term = 1, rpc executedId = 2, rpcChan sned
leader = 1, term = 1, rpc executedId = 2, rpcChan end
leader = 1, term = 1, rpc executedId = 2, rpcReplyChan sned
leader = 1, term = 1, follower = 2, rpc succeed
appendEntries failure......
leader = 1, term = 1, rf.nextIndex[2] = 3
leader = 1, term = 1, len(rf.log) = 7
leader = 1, term = 1, rpc executedId = 2, rpcReplyChan sned over
leader = 1, rpc executedId = 2, term = 1, set rpcTimeout = 500
leader = 1, term = 1, rpc executedId = 2, send rpc request start......
My role = 1, Id = 2, term = 3, get heartbeat from leader = 1
My role = 1, Id = 2, args.Term = 1, rf.currentTerm = 3
My role = 1, Id = 2, AppendEntries failure
My role = 1, Id = 2, term = 3, send heartbeatChan start
My role = 1, Id = 2, term = 3, send heartbeatChan end
leader = 1, term = 1, rpc executedId = 2, send rpc request end, result = true......
leader = 1, term = 1, rpc executedId = 2, rpcChan has not been closed
leader = 1, term = 1, rpc executedId = 2, rpcChan sned
leader = 1, term = 1, rpc executedId = 2, rpcChan end
leader = 1, term = 1, rpc executedId = 2, rpcReplyChan sned
leader = 1, term = 1, follower = 2, rpc succeed
appendEntries failure......
leader = 1, term = 1, rf.nextIndex[2] = 2
leader = 1, term = 1, len(rf.log) = 7
leader = 1, term = 1, rpc executedId = 2, rpcReplyChan sned over
leader = 1, rpc executedId = 2, term = 1, set rpcTimeout = 500
leader = 1, term = 1, rpc executedId = 2, send rpc request start......
My role = 1, Id = 2, term = 3, get heartbeat from leader = 1
My role = 1, Id = 2, args.Term = 1, rf.currentTerm = 3
My role = 1, Id = 2, AppendEntries failure
My role = 1, Id = 2, term = 3, send heartbeatChan start
My role = 1, Id = 2, term = 3, send heartbeatChan end
leader = 1, term = 1, rpc executedId = 2, send rpc request end, result = true......
leader = 1, term = 1, rpc executedId = 2, rpcChan has not been closed
leader = 1, term = 1, rpc executedId = 2, rpcChan sned
leader = 1, term = 1, rpc executedId = 2, rpcChan end
leader = 1, term = 1, rpc executedId = 2, rpcReplyChan sned
leader = 1, term = 1, follower = 2, rpc succeed
appendEntries failure......
leader = 1, term = 1, rf.nextIndex[2] = 1
leader = 1, term = 1, len(rf.log) = 7
leader = 1, term = 1, rpc executedId = 2, rpcReplyChan sned over
leader = 1, rpc executedId = 2, term = 1, set rpcTimeout = 500
leader = 1, term = 1, rpc executedId = 2, send rpc request start......
My role = 1, Id = 2, term = 3, get heartbeat from leader = 1
My role = 1, Id = 2, args.Term = 1, rf.currentTerm = 3
My role = 1, Id = 2, AppendEntries failure
My role = 1, Id = 2, term = 3, send heartbeatChan start
My role = 1, Id = 2, term = 3, send heartbeatChan end
leader = 1, term = 1, rpc executedId = 2, send rpc request end, result = true......
leader = 1, term = 1, rpc executedId = 2, rpcChan has not been closed
leader = 1, term = 1, rpc executedId = 2, rpcChan sned
leader = 1, term = 1, rpc executedId = 2, rpcChan end
leader = 1, term = 1, rpc executedId = 2, rpcReplyChan sned
leader = 1, term = 1, follower = 2, rpc succeed
appendEntries failure......
leader = 1, term = 1, rf.nextIndex[2] = 0
leader = 1, term = 1, len(rf.log) = 7
leader = 1, term = 1, rpc executedId = 2, rpcReplyChan sned over
exit status 2
FAIL	raft	4.504s
